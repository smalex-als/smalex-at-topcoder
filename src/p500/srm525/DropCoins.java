package p500.srm525;

import utils.ExampleRunner;

/**
 * Created by IntelliJ IDEA.
 * User: smalex
 * Date: 1/5/12
 * Time: 8:34 PM
 */
public class DropCoins {
  public int getMinimum(String[] board, int K) {
    int H = board.length;
    int W = board[0].length();
    boolean[][] brdOrig = new boolean[H][W];
    for (int j = 0; j < H; j++) {
      for (int i = 0; i < W; i++) {
        brdOrig[j][i] = board[j].charAt(i) == 'o';
      }
    }

    int result = Integer.MAX_VALUE;
    for (int y0 = 0; y0 < H; y0++) {
      for (int x0 = 0; x0 < W; x0++) {
        for (int x1 = W; x1 > 0 && x1 > x0; x1--) {
          for (int y1 = H; y1 > 0 && y1 > y0; y1--) {
            int coins = 0;
            for (int j = y0; j < y1; j++) {
              for (int i = x0; i < x1; i++) {
                if (brdOrig[j][i]) {
                  coins++;
                }
              }
            }
            if (coins == K) {
              int mY1 = H - y1;
              int mX1 = W - x1;
              int tmp = y0 + mY1 + x0 + mX1 + Math.min(y0, mY1) + Math.min(x0, mX1);
              result = Math.min(result, tmp);
//              System.out.println("find " + result + String.format(" (%d %d %d %d)", y0, x0, y1, x1));
            }
          }
        }
      }
    }
    return result != Integer.MAX_VALUE ? result : -1;
  }

  public static void main(String[] args) {
    ExampleRunner.eq(1, 2, new DropCoins().getMinimum(new String[]{".o..", "oooo", "..o."}, 3));
    ExampleRunner.eq(2, 3, new DropCoins().getMinimum(new String[]{".....o", "......", "oooooo", "oooooo", "......", "o....."}, 12));
    ExampleRunner.eq(3, -1, new DropCoins().getMinimum(new String[]{"....", ".oo.", ".oo.", "...."}, 3));
    ExampleRunner.eq(4, 4, new DropCoins().getMinimum(new String[]{".......", "..ooo..", "ooooooo", ".oo.oo.", "oo...oo"}, 12));
    ExampleRunner.eq(5, 6, new DropCoins().getMinimum(new String[]{".................", ".ooooooo...oooo..", ".ooooooo..oooooo.", ".oo.......oo..oo.", ".oo.......oo..oo.", ".ooooo.....oooo..", ".ooooooo...oooo..", ".....ooo..oo..oo.", "......oo..oo..oo.", ".ooooooo..oooooo.", ".oooooo....oooo..", "................."}, 58));
    ExampleRunner.eq(6, 0, new DropCoins().getMinimum(new String[]{"o"}, 1));
    ExampleRunner.eq(7, -1, new DropCoins().getMinimum(new String[]{"o"}, 2));
    ExampleRunner.eq(8, -1, new DropCoins().getMinimum(new String[]{"."}, 1));
    ExampleRunner.eq(9, 14, new DropCoins().getMinimum(new String[]{"......o....", "....oooo...", "...ooooo...", "....ooooo..", "....oooo...", "....o......", "..........."}, 16));
    ExampleRunner.eq(10, 1, new DropCoins().getMinimum(new String[]{"o...", "o.oo", ".o.o", "o.o.", "oo..", "oo.o"}, 10));
    ExampleRunner.eq(11, 2, new DropCoins().getMinimum(new String[]{".oo.oo", "o.....", "ooo.o.", "o..o..", "oo.oo.", "o.o.o.", ".o....", "oo.o..", "oo..o."}, 20));
    ExampleRunner.eq(12, 6, new DropCoins().getMinimum(new String[]{"oo...o..", "o.o..oo.", "oooo..oo", ".o..o..o", "..o.o...", "o..oo..o", "...o...o", "ooo..o.o", "o...ooo.", ".o..oooo", "..ooo.o.", "oooo..oo"}, 16));
    ExampleRunner.eq(13, 2, new DropCoins().getMinimum(new String[]{"....o.o..o", "ooo.o.o..o", "o.oo..ooo.", "o.o.ooooo.", "o.o..oo.o.", ".oo..o...o", "o........o", "....o....o", "..ooo...o.", ".o...o...o", "...o...oo.", "ooo..o.o.o", ".o...o...o", "o...ooooo.", "oo.o...o.o"}, 53));
    ExampleRunner.eq(14, 12, new DropCoins().getMinimum(new String[]{"..o.o..o...o", "o...oo.ooooo", "o.o.o.o...oo", ".o...ooooo..", "o.oo.o.ooooo", "oo.oo.o.....", "o.o.o..o..oo", ".oo..ooo.oo.", "oo....oo....", ".o.o.ooo.oo.", "oooo...o.oo.", ".o.o.oo..ooo", "..oooooo.ooo", "o.o..oo...oo", "..oo...ooooo", "...oo.ooooo.", "....o...o..o", "o.oooooo.ooo"}, 8));
    ExampleRunner.eq(15, 12, new DropCoins().getMinimum(new String[]{"o.o..o....o..o", ".ooo..oo.oo..o", "..o...o.o..o.o", "o....oo..o..oo", "o....o.oo...o.", "oooo.ooo..o.oo", "..o......o..o.", "o.oooo..oo.o..", ".o.oo..oo..ooo", "o.ooo..o.oo..o", ".ooo....o..o.o", ".o.ooo....o..o", ".oo..o.....o..", ".o.o.oo.o....o", "oo.o.oooo...o.", "oo.oo...oo.o.o", ".oo.oo.......o", "o..oooo..o.oo.", ".oo.o.oo.oo.oo", "..o.oo.o.oo.oo", "o.....o...ooo."}, 26));
    ExampleRunner.eq(16, 1, new DropCoins().getMinimum(new String[]{"....o", ".....", ".....", "o...."}, 1));
    ExampleRunner.eq(17, 4, new DropCoins().getMinimum(new String[]{".......o..", "..........", "..........", "..........", ".o.....o.o", ".....o..oo", "..........", "......o..."}, 2));
    ExampleRunner.eq(18, 10, new DropCoins().getMinimum(new String[]{".........o.....", ".......o.......", "......o...o.o.o", "....o....o.....", "o............o.", "..........oo...", "o..............", ".o.......o.....", "...o..o........", "............o..", "...ooo.........", "....o.........."}, 4));
    ExampleRunner.eq(19, 2, new DropCoins().getMinimum(new String[]{"....................", ".o...o.o...o.......o", "....o...............", ".o..................", ".................o..", "....................", ".........o..........", "....o...............", "....o.............o.", "..o......o.o........", "................o...", ".......o.........o..", "..o........o.....o..", "..........o.........", "..o.............o...", "...................."}, 19));
    ExampleRunner.eq(20, 17, new DropCoins().getMinimum(new String[]{".......................o.", "...........o.............", ".....o...................", "o........................", "..................o.o....", "..........o........oo....", ".............o.......o..o", "........oo....o..........", "o.......................o", "oo.............o..oo.o...", ".....oo............o...o.", ".........................", "................o........", ".......oo........o.......", ".o.........o.o....o.o....", ".....................o...", ".................ooo....o", "................o....o...", "......o..o...............", ".o.....o................."}, 7));
    ExampleRunner.eq(21, 26, new DropCoins().getMinimum(new String[]{"........o.......o.o..o........", "oo...................o........", "......o....o.........o......o.", "...................o..o.......", ".........................o....", "..............o............o..", "...o..........o.o........o....", "..........o..................o", "............oo.....o.........o", "..............o.....o.........", ".o...............oo...........", "o.................o...........", "...o......o...o.o.......o.....", ".o.....o.................o....", "o.o........oo......o..o.......", "...........o...........o......", "...........o...........o......", ".......o............o.........", "..o.......o...................", "........o..............o......", ".....o...o....................", "....o.....o..o.....o.....o....", ".....o....................o.o.", ".........o............o......."}, 1));
    ExampleRunner.eq(22, 4, new DropCoins().getMinimum(new String[]{"ooooo", "o..oo", "ooooo", "ooooo", "o.ooo"}, 6));
    ExampleRunner.eq(23, 11, new DropCoins().getMinimum(new String[]{"oooooo.ooo", "o.oooooooo", "oooooooooo", "oooooooooo", "oooooooo.o", ".ooooooo.o", "oooooooooo", "ooooooo.oo", "oooooooooo", "oooooooooo"}, 12));
    ExampleRunner.eq(24, 13, new DropCoins().getMinimum(new String[]{"ooo.ooooooooooo", ".oooooooooooooo", "oooooooo.oooooo", "ooooo.ooooooooo", "oooooooooooo.oo", "ooooo.ooooooooo", "oooo.ooooooo.oo", "ooooooooooooooo", "ooooooooooooooo", "ooo.oooooo.o.oo", "o.ooooooooooooo", "ooooooooo.oo..o", ".o.o.oooo.o..oo", "ooooo.ooooooooo", "o.oooooooooooo."}, 39));
    ExampleRunner.eq(25, 7, new DropCoins().getMinimum(new String[]{"o..oooo.oo.ooooooooo", "o.oo.ooo.ooooo.oooo.", "oooooooooooooooooooo", "ooooooooooooooo.o.oo", "ooo.oooooooooooooooo", "ooooo.ooooo.ooooooo.", "oooooooooooooooooooo", "ooooooooooooooooooo.", ".o..ooooo.ooooooo.oo", "ooooooooooo.oooooooo", "oooooo.o.ooooooooooo", ".oo.ooooo.oo.ooooooo", "ooooooooo.oooooo.ooo", "ooooo.ooooooo.oooooo", "ooo.ooooooooooooo..o", "ooooooo.oooooooooooo", "oooooo.ooooooooooooo", "ooooooo.o.oooooooooo", "ooooooooooooooooooo.", "ooooooooooooooooo.o."}, 236));
    ExampleRunner.eq(26, 23, new DropCoins().getMinimum(new String[]{"ooooo.oooooooooooo.oo.ooo", "oooooo.o.oooo...ooo..oooo", "oooo.ooooooo.oooooooooooo", "oo.ooooooooooo.oooooooooo", "oooo.oooooooooooooooooo.o", "oooooo.oooooooooooooooooo", "oooooo.oooooooooooooooooo", "oooooooooooo.oo.oooooooo.", "ooooooooooooooooooooo.oo.", "oooo..o..ooooooooooooooo.", "ooooooooooooo.ooooooo.ooo", "oo.oooooooooooooooooo.ooo", "ooooooo.oooooo.oooooooooo", "ooooooooooooooo.oooooooo.", "o.oooooooooooo.oooooooooo", "o.oooo.oooooooooooooooooo", "ooooooooooo.o.ooooooooooo", "oooooooooooooooo.oooooooo", ".ooooo.ooooooooooooo.oooo", ".oooooooooooooooo..oooooo", "ooooooooooooooo.o.ooooooo", "ooooooooooooooooooooo.ooo", "ooooooooooooooooooooooooo", "..oooooooooo.oooo.o.o..oo", "oooooooo.oo.ooooooo.ooooo"}, 83));
    ExampleRunner.eq(27, 18, new DropCoins().getMinimum(new String[]{"ooooooo.oooooooo.ooooooooooooo", "o.ooooooo.oooooooooooooooooooo", "o.oooooooooooooooo.ooooo.ooooo", "ooooooooooooooo...ooooooooo.o.", "oooooooooooooooooooooooooooooo", "ooooooo.oooooooooooo.oooooooo.", "oooooooooooooo.o.oo.ooo.o.oooo", "ooooo..oo.oooo.oooo..ooooooooo", "oooooooooooooooooo.ooooooooooo", "ooo.oooooooo.oooo.oooooooooo.o", "ooooooooooooo..oooooooooo.ooo.", "ooo..oooooo.ooooooo.ooooooo.oo", "o.oooooo.o.oooooo.oooooooooooo", "ooooooooooooooooo.oooooooooo.o", "o.oooooooooooooo.oooooooo.oooo", "ooooooooooooooooooooooooooooo.", "oooooooo.ooooooooooooo.o..oooo", "oooooooooooooooo.o.ooooooooooo", "oooooooooo.ooooooooooooooooooo", "oooo.ooooooooooo.ooooooooooooo", "ooooooooooooo.oooo.ooooo...ooo", "ooooooooooooo.ooooooooooo.o.oo", ".ooooooooo.ooo.ooooooooooooooo", "oooooo.ooooooooooooooooooooooo", "oooooooooooo.oo.oo..oo.oo.oooo", "o.oo.ooooooooooo.ooooooooooooo", "ooooooooooooooooooooooo.oooooo", "ooooooooooooooooooooooooo.oooo", "ooooooooo.oooooooooooooooooooo", "oooooo.oooooooooooooo.oooooooo"}, 334));
    ExampleRunner.eq(28, 1, new DropCoins().getMinimum(new String[]{"oo", "oo", "oo"}, 4));
    ExampleRunner.eq(29, 6, new DropCoins().getMinimum(new String[]{"ooooooo", "ooooooo", "ooooooo", "ooooooo", "ooooooo", "ooooooo", "ooooooo", "ooooooo"}, 14));
    ExampleRunner.eq(30, 16, new DropCoins().getMinimum(new String[]{"oooooooooooo", "oooooooooooo", "oooooooooooo", "oooooooooooo", "oooooooooooo", "oooooooooooo", "oooooooooooo", "oooooooooooo", "oooooooooooo", "oooooooooooo", "oooooooooooo", "oooooooooooo", "oooooooooooo"}, 8));
    ExampleRunner.eq(31, 12, new DropCoins().getMinimum(new String[]{"ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo", "ooooooooooooooooo"}, 102));
    ExampleRunner.eq(32, 21, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo", "oooooooooooooooooooooo"}, 143));
    ExampleRunner.eq(33, 19, new DropCoins().getMinimum(new String[]{"ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooo"}, 288));
    ExampleRunner.eq(34, 21, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 324));
    ExampleRunner.eq(35, -1, new DropCoins().getMinimum(new String[]{"o.ooo..oo.o.o.", "oo.o.ooo..o.o.", "oooo.o.oooooo.", ".o.o....o.o.o.", "oooo.....ooo..", "oo.oooooo..ooo", "o.o..o...ooooo", "..ooo.o.oooo.o", "..o...oo.ooo.o", "...ooo.oo.o...", "ooooo..oo..o..", "ooo.oo..oo.o..", "oo...oooo.oooo", "ooooo.oooo.o..", "..o..ooooooo.o", "ooo.o..oooo.oo"}, 118));
    ExampleRunner.eq(36, -1, new DropCoins().getMinimum(new String[]{"..oo..o..o.o..o.", "..o.o..o.o.o.o..", "..oo.ooooooo.o.o", "...o..........o.", "o..oooo..ooo..o.", "o....ooo.oo.oo..", "ooo.o.oo.o..oo..", "..ooo..o.o.o.oo.", ".....o....o..oo.", "....o.oo.....oo.", "oooo.oo..o...oo.", "...ooooooo....o.", ".oo.oo.o...oooo.", "o.o..oo.oo.oooo.", "o...o.oo.o.oo..o", ".o.oo..o......o.", "oo.oo...o.oo...o", ".ooo.o.o.o...o..", "....oooo.ooo.o.."}, 138));
    ExampleRunner.eq(37, -1, new DropCoins().getMinimum(new String[]{"o..oo.o.o.oo...ooo", "oo.o.oo.o.o.o...o.", ".ooo.ooo..ooo.o.o.", ".oooooo..ooo..o.o.", ".o.o.oo...o..o.oo.", "..oooo......ooo.oo", "...o.o.....o..oo.o", ".ooo.oo.o...o.o...", "o..o...oo.oo..oo.o", "o...o....ooo..o...", "..o..o.o.o........", ".oo.oo...o.o.ooo..", "..oo...oo.ooo...oo", "o.ooo.ooo...o..oo.", "oo...o.oo.oooo.o..", "oooooo.o..oo.o..oo", "ooo...o.oo.oo..o.o", "oo..oo..ooo.o.o.o.", "...oo..oo...o.o.oo", "oooo...ooooooo...o", "..o.oo.ooo..o.oo.o", "..o.....o..o.o.ooo"}, 196));
    ExampleRunner.eq(38, -1, new DropCoins().getMinimum(new String[]{".o..o..oo..oo...o..o", "......oo.o..oo...ooo", "oooooooo..oo..o..o.o", "o.oo...ooo...o.oo...", "oo.oo..o.o.oo.oooooo", "ooooooooo..oo.o.....", "oo..o.o..oooo..oo.oo", "oo.o.o...oo.o.o.o..o", ".ooo...o.ooooo.ooo.o", "oo..o......o..o..ooo", "oo.o....o..oo...ooo.", "ooooo.oo.ooooooooo..", "........oooooo...o..", ".o..o.o...oo.o....o.", "...oo..oo..o.o.oo.o.", ".oo.ooo.o...oo.o.o.o", "oo.o.....oo...o.oo.o", "ooo...oo.o...o....o.", ".ooooo.ooo....oooooo", ".oo.ooo.o.ooo.ooooo.", "oo.o..oooo...ooooo..", "oo..ooo...o..o..o.oo", ".o..o..o.oo..o.ooooo", "oooo..oo..o.....o..o", "....o..oo...oo...oo."}, 243));
    ExampleRunner.eq(39, -1, new DropCoins().getMinimum(new String[]{"oo..o..o...oo...oo..o", ".o....o.....o......o.", ".ooo.o..oo....o....o.", "........o......o.o...", "o..o.o..o.......o....", "oo..o.o.o.......o.o.o", "...o.oo...o...ooo.o..", "...............oo.o.o", "..oo.....o......o....", ".o.o..o...o.....oo.o.", ".........o...........", "....o....oo....oo....", "o.....oo.......o....o", ".o.o.oo.o........ooo."}, 74));
    ExampleRunner.eq(40, -1, new DropCoins().getMinimum(new String[]{"......o.....o.o..oo.....", "o....o....o...o.oo..o.o.", "........oo..o...o..o....", ".......o.oo..o...o..ooo.", "...oo.oo....o....o....o.", "oooo......o..o..........", ".o.....o..o.o......ooo.o", "....o..oo......o...o...o", "..o....o.........o......", ".oo....o..o....o....o...", "..ooo.oo...o......o.oooo", ".....o...o.....o.....o..", "o.o....oo.....oooooooo.o", "o...oo.o....o.o....o....", "o....o.o........oo.oo...", ".o.......o.o...oo.o..o..", "o....o.o...o.o......o...", "..oo.....o..oo.........."}, 110));
    ExampleRunner.eq(41, -1, new DropCoins().getMinimum(new String[]{"..o...oo.o....o...o...oo.oo", ".ooo...o.o...o......o....o.", ".o....o..o..o.o..ooo......o", "oo....o..........oo....oo..", "...o..o.......o.o..........", "..............o.o..oo..o.o.", "...oo.oo.oo..oo......o...o.", ".oo...oo....o......o......o", ".oo.o...o..o......o......oo", ".o..o.o...o....o..ooo.o..o.", "o..o....o...ooo..oo........", "..o...o..o...o.o.o.o.....o.", "...o.o.o.......o.o...o.....", "..o.o.o.......o.o...o..o.oo", ".....o.oo......ooooo...o.oo", "..ooo.o.oo....oo..o.....o..", "o.o.....o.o.o....o.o....o..", ".o....o...o....o..o...o....", ".o..o.o.......o.....o.o....", "..o......o...o...o.......oo", "......oo...oo..........o..o", "o..oo...o.o.o.............."}, 162));
    ExampleRunner.eq(42, -1, new DropCoins().getMinimum(new String[]{"..o.......oo...o.........o...o", "..o.o...oo.o....o..o.oo.o..o..", "...oo.o.....ooo.o.........o..o", "....o.......o..o.oo..o.....o..", "..o...o.o..oo.......ooo..o.o..", "......o.o...o..o.....o..o.o..o", ".oo.o.....o.........oo........", "......o...o...o.....o..o..o...", "...oo..o....o.o.....o.....o...", "o.o.o....oo.......o..o....o..o", "oo..o..........oo....oo...ooo.", ".......o.oo..o.o.oo...oo..o.oo", "....oooo.....o..o......o...oo.", "o...o...o....o.ooo.o.o..o..o.o", "o..o...o.....o.ooo...........o", "..oo...o...o.....o.......o....", ".....o.......o..o.oo.....oo...", "......o.............o.ooo.oo..", ".ooo......o.....o.....oo..o..o", "................o..o....oo..o.", "ooo..o....o.....o....o.....o..", ".o...oo...oo.o...o.o....o.o...", "..o..o.....o..o.o.......oo....", "...ooo.o.o............o.ooo...", ".........o...o........o.....o.", "......o...o...o....o.o.o.....o"}, 208));
    ExampleRunner.eq(43, -1, new DropCoins().getMinimum(new String[]{"o.ooooooooooooo", "ooooooo.ooo.ooo", "ooooooooooooooo", "ooooooooooooooo", "ooooooooooooo.o", "o.ooooooooooooo", "ooooooooooooooo", "oooooooo.oooo.o", "o.ooooooooooooo", "ooo.ooooooooooo", "oooooooooooo..o", "ooooooooo.ooooo", "oooooooooo.oo.o", "ooo.o.ooooooooo", "oooooooooooooo."}, 191));
    ExampleRunner.eq(44, -1, new DropCoins().getMinimum(new String[]{"ooooooo.oooo.ooooo.o", ".ooooooooo.ooooooooo", "o.oooooooooooooooo.o", "ooo..ooooo.oooo.oooo", "ooooooooo.o.oooo.ooo", "ooooo.o.ooo..ooooooo", "ooo.oooooooooooooooo", "ooooooooooo.oooooo.o", "ooooo.oooooooo.o.oo.", "ooooooo.oooooooooooo", "oooo.ooooooooooooooo", "ooo.oooooooooo.ooooo", "oooooooooooooooooooo", "oooooooooo.ooooooooo", "oooooooooooooooooooo", "oooooo.ooo.ooooooooo", "ooooooooooooooooooo.", ".ooooooooo.oo.oooooo", "ooooooooooo.oooooooo", "oooo..o.oooooo.o.ooo"}, 330));
    ExampleRunner.eq(45, -1, new DropCoins().getMinimum(new String[]{"o.ooooooooooo.oooooooo.oo", "oooooo.ooo.oooooooooo.ooo", "ooo.oo.o..ooooooooooooooo", "oooooooo.oooooooo.oooo.oo", "ooo.o.oooo.ooooo..oooo.oo", "ooooooooooooooooo.o.ooooo", "oooooooooo.oooo.oo.oooooo", "ooooooooooooooo.ooooooooo", "oooo.oo.oo.oooo.oooooo.oo", "oooooooooooooooo.oo.ooooo", "ooooooooooooooooooo.oooo.", "oooooo..ooooooooo.oo.oooo", "o.oooo.ooo.ooooo.oooooooo", "ooo.ooooo.ooooooooooooo.o", "ooooooooooooooooo.ooooooo", "ooo...ooooooooooooooooooo", "oooooooooo.ooooo.oooooooo", "oo.ooooooooooo.oooooooooo", "ooooooooo.oooo.oooooooooo", "ooo.ooooooooo.ooooooooooo", "oooooooooooo.oooooooooooo", "ooooooooooooooooooooooooo", ".ooooooooooooooooooooooo.", "ooooooooooooooooooooooooo", "o.oooooo.oooooooooooooooo"}, 501));
    ExampleRunner.eq(46, -1, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooo.ooo", "oooooo.oo.oooooo.ooooooooooooo", ".ooooooo.o.oooooo.ooooooooo.o.", "oooooooooooooooo.ooooooo.ooooo", "ooooooooo.oooooooooooooooooooo", "ooooooooooooo.o.oooooooooooooo", "ooooooo.oo.ooooo.ooooooooooooo", "ooooooo.oooooooooooooooooooooo", "oooooo.ooooooo.ooo.oooo.oooooo", "oooooo.oo.ooooo.ooooooooo.oooo", "oooooooooo.oooo.oooooooooooooo", "ooooooooo.o.oooooo.ooooooo.ooo", "ooooooooooooooooooooooooooo.oo", "oooooo.ooooooooooooooooo.o.ooo", "oo.ooooooooooooooooooooooooooo", "oooooooooooooooooooooo.ooooooo", ".oooooooo.oooooooooooooooooooo", "ooooooooooooo.ooooooooooooooo.", "oooooooooooooooo.ooooooooooooo", "oooooooooooo.ooooooo.oooo.oooo", "o.ooooooooooooooooooooooooooo.", "o.oooooooooooooooooooooooo.ooo", "oooooooooooooooooooooooooooooo", "ooooooooooo.oooo.oooooooooo..o", "ooo.oo.o.o.oooooo.ooo.oooooooo", "oooooo.ooooooooooooooooooooooo", "ooooo.ooooooooooo.oooooooooooo", "oooooooooooooooo.ooooo.ooo.ooo", ".ooooooooooooooooooooooooooooo", "oooooooooooooooo.oooooo.o.o.o."}, 811));
    ExampleRunner.eq(47, -1, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 434));
    ExampleRunner.eq(48, -1, new DropCoins().getMinimum(new String[]{"oo.ooo.o.oooooooo.o.o.o.ooo.oo", ".ooo..o.o..oo..o.oo.ooo..ooooo", "oooo.ooooooo.o..o.o..oooooo.oo", "oooo.ooooo.oooo.oo.ooooooo..oo", ".o.o.o.oooooo.o.o.oooooooooooo", "o..ooooo...ooo..o.oo..oooooooo", ".oo.oo.ooo..ooo.oo..oooooooooo", "oo.oo...oooooo.ooooooo.oooooo.", "oo.o.ooooo.ooo.oo.ooooooooooo.", "o.ooooo.oo.ooo.ooo.ooo.oooo.oo", "oooooooo.ooooooo.oooooo.oo.ooo", "oo.ooo.ooo.oooooo.oo.oo.o.oooo", "ooo.oooooooooooooooooooooooooo", "ooo.ooooo.o.o.ooooo.o.o.oooooo", "..o.oooooooooooooo.o.ooooo.ooo", "oo.oooooo.o.oooooooooo..ooo.oo", "ooo.o.oo...o.ooooo.ooooooooooo", "ooo...oo.oooooooooooo.ooooo.oo", ".oo.ooooooo.oo.o.ooooo.oooo..o", "...oo.ooo.o.oo.ooo.ooooo...ooo", "oo.oo..oo.o.ooooooo..ooooo.o.o", "ooooo...oo...o..ooooooooo.ooo.", "o..ooo.ooooo.ooooooooo..oooooo", "ooooo.ooo..oo...oo.oo..oooooo.", "oo.ooo......o..oooo..o..oooo.o", "oooo.ooo.o..oooo.oo.ooooo.oooo", ".ooo.oo..o.o..oooo.ooooo.oo.oo", "o.o..oo..o.ooooooooooooo..oo.o", "o.oooooooo.ooo.oo.oo.ooo..oooo", "oo.ooooooooooooo.ooooo.o.ooooo"}, 607));
    ExampleRunner.eq(49, -1, new DropCoins().getMinimum(new String[]{"o.oooo.....o..o..oo...oooooo..", "...oooo.oo..o..ooo..oooo.o..o.", ".ooo.o.oo.o...oo..o..o.oooo..o", "...o...o.o.o..oo..oo.oooo....o", "o.....ooo....o.o..oo.ooo..oo..", "..ooo...o.oooo..o........o.o.o", "o..oooo.oo.o....o.oo...oo...o.", "o..ooo...oooooo..o.oo..o.o.ooo", "oo.o.ooo..o.....oo..o...o.o.o.", ".o..o..o.o...o..oooo......o.oo", "o.ooo...o.o.o..o.ooo.o.ooo.o..", ".o.ooooooooooo.o...o..o.o.o.oo", "..oo.oo..ooo.o..o.o.oo...o.ooo", "o.oooo.oo..ooo.oooo....oo..ooo", ".o.oo....o.oo....oo..o..oo..o.", "o.oo.....oo.o.....o...oo...oo.", "..oo..ooo.oo..o....oooo...o..o", "o.oooooo.o......oo..ooooo..ooo", "o...ooo.o.oo..o...oo.oo.ooo..o", "ooo.....o..oo.ooo.oooooo.ooo.o", "o.ooo.o..ooo.o..o....oooo....o", ".o.o.o.o.oooooooo..oo..o.o..o.", "..oo.oo.o.o..oo.o.oo.oo.o.o.oo", "oooooo.....ooo..oo.oooo.o.o..o", "...o..o.ooo.o.oo.oo.o...oo..o.", ".oo...o...o..o.......ooo.o....", "....o...oooo....ooooo..o...o..", "o..oo.oooo..oooo.ooo...oo.....", ".o.oo.oo..o..oo..o....o.oo.oo.", "o.oo....o...o..o.o.o...o..oo.o"}, 443));
    ExampleRunner.eq(50, -1, new DropCoins().getMinimum(new String[]{"...o..o...ooo.......o.....o.o.", "oo..o.o....o...............o..", "..o.o...o..o........o......o..", "o..oo........o...o.......o..o.", "..oo....oo...oo.o....o.o......", ".oo.o..o.............o.o......", "o.o.....o...o..o....o..o......", "o.........o........o....o.....", "oooo.....oo......o.o......o..o", ".....o.o..............o....o..", "oooo........o.....o.o.......oo", "....o...o..o.oo..o.o......o.o.", "..o....oo..........o..o....o..", ".........oo...oo..ooo.........", "...o.o.oo.o.....o...ooo.oo.o..", "....o..o.o.oo.o.o.....o.......", "....o..o.oo...oo......ooo.....", "o..oooo...........o.......o..o", ".........ooo....o.o...o.o.....", ".ooo.o..o.o.....oo..o..o....o.", "o..oo...oooo.o.......o..o..o.o", "....oo..oo.o.....o..oo.o......", "o.oo..o......o...o............", "...o....o...o.o.o..oo....o....", ".oo.o..o....o.o.o.....oo...o..", ".o...o.......o..o..o..o.oo.o..", "o....o...o....o....o..........", ".......oo....o....o.oo........", "....o.o.........o.........o...", "...oo........o.o........o....."}, 220));
    ExampleRunner.eq(51, 57, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 2));
    ExampleRunner.eq(52, 0, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 900));
    ExampleRunner.eq(53, -1, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 899));
    ExampleRunner.eq(54, -1, new DropCoins().getMinimum(new String[]{}, 5));
    ExampleRunner.eq(55, -1, new DropCoins().getMinimum(new String[]{}, 900));
    ExampleRunner.eq(56, 29, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo"}, 1));
    ExampleRunner.eq(57, 0, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo"}, 30));
    ExampleRunner.eq(58, 27, new DropCoins().getMinimum(new String[]{"o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o"}, 3));
    ExampleRunner.eq(59, 0, new DropCoins().getMinimum(new String[]{"o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o"}, 30));
    ExampleRunner.eq(60, 6, new DropCoins().getMinimum(new String[]{"....o.oo.............o.o......", "...o...oo...o...o.............", "o....oo..............oo......o", "...o.......o..o..o......o.o...", "..o.o..o..o......o.o.......o..", ".....ooo.....oo......o.o......", "o.....o...o.....o....o.o....oo", ".o...o.......o..o...o........o", ".......o................o.....", ".............oo..ooo....o.o...", "...ooooo..o.o................o", "..........oo....oo...o...o..o.", "...o....o........o...........o", "o..........o.o..ooooo..o......", "...........oo...o.......o..o..", ".....o...........oo..oo.oo.o..", ".o....oo.ooo.....o............", "......o...o..oo....o..o.......", "...........o......o...........", "oo..........o...o.....o..o.o.o", "..o..........o..o..oo..ooooo..", ".o..o...oo.........o...oo.o...", "...o.o...o...o.....o....o.....", ".oo.......o...................", ".......o......o...o...o.oo.o..", "...o....o..o............o.....", ".....oo...o..o..o..oooo.......", ".........o...o....o..o........", "..................o.o...o.....", "o.........ooo.o.....oo.......o"}, 151));
    ExampleRunner.eq(61, 16, new DropCoins().getMinimum(new String[]{"........o..................o.o", "....o.....o........ooo.oo..o.o", "........o......oo....oo.o.o...", "......oo.....o....o.........o.", ".......o.......o..........o...", "....o.........................", "......o......o...o............", "oo..o...oo....o....o..o....o..", "..............oo.o...oo.o.o...", "..o...o.............oo........", ".o...o.o...............o...o..", "...o.oo....o......o...oo..o...", ".oo.o.........o....o........o.", "...o......o......o.o..........", "..o....o...oo..o.o..........o.", "...o..........................", "....o..o...o..oo..o.....oo....", ".o..o..oo..o.o...o..ooo.......", ".....o...o.o...o....o..o...o.o", "o....o...o..o..o.o...o..o.....", ".o..o...o.........o...o....oo.", "..........o.o..oo.o......oo...", "oo...o.....ooo..o.o.....oo....", "o......o...o.o..o.o........o..", ".........o.o........o........o", ".....o.o....o.o.o..o.o....o...", "....o.....o.o...o............o", "o.....o..o...o...o...o........", ".o.oo..o...o...oo..oo........o", "........o..oo........o........"}, 94));
    ExampleRunner.eq(62, 8, new DropCoins().getMinimum(new String[]{"........oo.....o......o.......", "...o....o......o.....oo.......", ".o..o....o..............o.o...", "..........o.....o.o......o....", "......o................o......", "..oo.........o.o.....o........", "..o....ooo..o.oo..............", "o...o........oo.ooo..o.....o..", "o..oo..o..oooo..o..o..o.......", "..o....o.o....o.......oo..o...", ".........oo......o.o.....o....", ".....o......o.o..........o..o.", "..o.....oo..........o..o..oo..", "....oo...o.o..ooo..o....o..o..", ".......o.o........o....o.o..oo", "................o.............", "..o..oo..o........o.o...oo....", ".........o..........o......o..", ".o....o..o...............oo.o.", "o.........o.......o...........", "..oo.o.......o..oo.o..o.......", "............o.....o.o.....o.oo", "......o....o....o..oo.oo..o...", "....o......o.......o....o.....", "o......o.....oo.o.oo....oo....", "o..........o.o..o....oo...o.o.", "........ooo......o.o......o...", "o........o..o......o...o...o..", ".............o.oo.o.....o.....", "o.o.o.o.......o.....o.o......."}, 128));
    ExampleRunner.eq(63, 28, new DropCoins().getMinimum(new String[]{"o.o.oo..oooo.....oo.o..o...o..", "o..o.ooo.oo....o...oo.....o.oo", ".oo.oo....oo.oo...oooo..o.oo.o", "oo..o...ooo....ooo.o.o...o....", ".oo..oo.oo.o...ooo..o.o..ooooo", "..oo.ooo.o.oooo....o.ooo.oo.oo", ".ooooo..oooo.oo.ooo.oo.ooooo..", "ooooo.o.o...oo....oo..o..oo...", "oooooo..o.ooo.o...ooo......ooo", "o..o...oo...oo.oo...oooo...o..", ".o..o..o..oo.o.o..o.o....o.o..", "o...oo...o...o.o.......o...oo.", "oo..oooo.oo.o.oo.ooo..oo.oo.oo", ".o.oo...oo.......oooo....o.oo.", ".o..oo..ooo.ooo...oooo.oo.ooo.", "o.o..o.oo.ooo..o..oo..o.o...o.", ".o...o.oooo..oo.....o.oo.ooo..", "oooooo.o..ooo.o...ooo...o.o...", ".o.ooo.oo.ooo..oo.o.o..oo.ooo.", "oooo..oooooo.o....o..o...oo..o", ".oooo...ooo........o....ooooo.", ".oo..oooooo....o.o.ooo...o..oo", "o.oooooo..oooo.o.oo.o.o....oo.", "ooooo...o...oo.ooo..o...o..o.o", "..oooo...ooo....o.oo..ooo.....", "o..o.o...o..o..o.o...o.oo.oooo", "oo...oo.o..o.o...ooo.o.o.ooo..", "...o..oo....o..oo....ooo.o.o..", "ooo.o..oo..ooo.oooo.o...o.o.oo", "..o.oo.oo.oo.oo..o...o.o.o.o.o"}, 49));
    ExampleRunner.eq(64, 4, new DropCoins().getMinimum(new String[]{"ooooo.oooooooooooooooooo.o.ooo", ".ooo.o.ooooooo.oooooooooooo.oo", ".o.o.ooo.oooo.oooooooo.o.ooooo", "..ooo.oooo.ooo.oooooo..oo..ooo", "o.ooooooo.o.o.ooooooo..o.ooo.o", "o..oooooo.ooooooo.o.oo.oooooo.", "ooooooo..o.oooo...oooooo.ooooo", "ooooo.o..ooo.oooo..oooooo.ooo.", ".ooo..ooooooooooooooooooooooo.", ".ooo.oooooo.ooo.ooooooooo...oo", "oooooooooooooooo.ooooooo.oo...", "oooo.oooooo.oooooooooooo..oooo", "ooooooo.ooo.o.ooooooooo..ooo.o", "oooo.oooooooooo.oo..ooo.ooo.oo", "o.oo.o.ooooo.oo.ooo.o.o.oo.ooo", "o.ooooooo.ooo.oo.o.ooooo...ooo", "oo.ooo...ooooooo.oo.oooo.oo...", ".oooooooooo.o.oooo.oo.o.oooooo", "o.ooooooo.o..oooo..oooo.oooooo", "oooo.oo.o.ooooooooooooooooo.o.", "oooooooooooooooo..oooooooo.oo.", "..oo.o.o.ooo.oooo..oooo..ooooo", "ooooooooooooooo...oo.o.oo..o.o", "oooooooo.oo..oooo.oooo.oo.oooo", "oooo.ooo.ooo.o.oooo..ooo.ooooo", ".oooooooooooo.oooooooooo.ooooo", "oo.oooooo..oo.oo.o.oooo.oooooo", ".oooooo.oooooooo.ooooooooooooo", "oooo.ooooooo..oooooooo.ooooo.o", ".oooooo.oooo..ooooo.o.ooooo.o."}, 609));
    ExampleRunner.eq(65, 17, new DropCoins().getMinimum(new String[]{".o.oo.o.ooooooo..ooooooooooooo", "o.o.oooooooo.oooo.oo..oooooooo", "oo.oo.oo.oo.oooo.oo.oooo.ooooo", ".o.oo.o.oooooo.oooooo.oo.ooooo", "o.o.oooooo.o.oooo.o.oo..oooooo", "oo.oo..oo.oooooooooo.ooooooo.o", "o..ooo.ooo.o.ooooooo.oooo.oooo", "oooo.ooooooo.oo.oo.oo.o.oooooo", ".o.o.o.oo..ooooooooo..oo.o.o.o", "ooooooo.oooo.ooooooo.o...ooo.o", "ooo.ooooooooo.o.oooooooooo.o.o", "o.oooooo.oooooooo.oooooooo.ooo", "oooooo.o.o.oo.ooooooo.ooooo.oo", "oo.o...oooooooo.oooooooooo.o.o", "oooo.oooo...o.oo.o.oo..ooo.ooo", ".oooooooooo.oo...ooooo.o.oo.oo", "oo..ooooooooo...o.o.o.o.oooooo", "ooo.o.o.oo.o.oo.oo.o.ooo.ooooo", "oo.o.oo.oo.oo.ooooo.oooooo..oo", "oooooooooooooo..oo.oooo.oooooo", "oooooooooooooooooo.oo.ooo.oooo", "ooooooooooo.ooooo.oo.oo.oooooo", "..oooo..o.oooooooooooooo.ooooo", ".ooooooo.oooooo.o.oooooooooooo", "o.ooooooooo.ooooo.oooooooooo.o", "oo.oo.ooooooooo.ooooo.oooo.o..", "..o..ooo.ooooo.oooooooo..o.o.o", ".oo.ooooooo.oooo.oo.oo.ooooooo", "o.ooooooo.oooooooooo.o.ooooo.o", "ooo.ooooo..oooooooo.oooo.ooooo"}, 310));
    ExampleRunner.eq(66, 45, new DropCoins().getMinimum(new String[]{"oooooooooooooo.oooo..ooooooooo", "ooooooo.ooo..oo.ooo..oooooooo.", "ooooo.oooooooooooooo.o.oooo...", ".oo.o..oo.ooo.oooooo.ooooo..oo", "oooooo.oo.oooooooo.ooo....o.oo", "ooooo.o.ooooooooooooo.o..ooooo", "ooooooooooo.oooooooo.o...ooooo", "oooooo.ooooo..oo.oo.ooo.oo.ooo", "oooo....oo.ooo.ooo.ooooooo.ooo", "oooooo.oooooooooooo.oooo.ooooo", "o.ooo..o.ooooo...oooo.oooooooo", "oooooo.oooo.ooo.oo..o.o..ooo.o", "o.ooooo.oo.oooooo...oo.o.oo.oo", "o.ooooooo..oo.oooooo.ooooooooo", "ooooo..o.oo.ooo..ooooo.ooooooo", "o.oo..o.oooooo.ooooo.ooo.ooooo", ".oo..ooo..oooooooooooooooooooo", "oooooooooooo.ooo..ooooooooooo.", ".o.oooooooooooooooooooooo..o.o", "ooooo.oooooo.o.oooooooooooooo.", ".oooo.oooooooo.oooooooooo.oooo", "o.ooo.oooo.oo.oooo...oooo.o.oo", "oooo.ooooo.oo.oooooooo.o.ooooo", "oooooooooooo..oooooooooooo.o.o", "ooo.oo.ooo..ooooo.oooooooooooo", "ooooo.o.ooo.ooooooo.o.oooo.ooo", "..oooo.o.ooooo..oooo.ooooo.oo.", "o.oooooo.ooooooo.ooooooo..oooo", "oooooo.oooo.oooo.ooooooo..o.oo", "o.ooooooo.ooooooo.ooooooooooo."}, 10));
    ExampleRunner.eq(67, 41, new DropCoins().getMinimum(new String[]{"ooooooooooooooo.oo.ooooooooooo", "oooo.ooo..oooooooo..oo.oo.oooo", "..oo..ooooo...ooooo.o.oooo.ooo", "ooooooooo.ooooo.oooooooooooooo", ".ooo..oooooooo..o.ooo.oooooooo", "o.ooo.ooooooo.oooooo.o.ooooooo", "ooooo.ooooooooooooooo.oooooooo", "oooo..oooooo.oo..oo.ooo..ooooo", "oooooooooooooo.oooo..o.ooooooo", "oooooo.o..oo.oooo..ooo.oo..o.o", "ooooo..oo.ooooo..oo.oooooooo.o", "ooooooooo.oooo.o.oooo.oooooo.o", ".oooooooooo..oo.o.ooooo.o..ooo", ".ooooooooooooooo.oooooooo.oooo", "oo.ooooooo.oooooo.ooooo.oo.o.o", ".oo.oo..o.oooooo.oo.ooo.o..ooo", "oooo.ooo..ooo...oooooo.oooo..o", ".oooo...oo..oo.oo.oooooo.oooo.", "ooooooooo.ooo..ooooooooooooo.o", "ooo..oo.o..ooo.oooooo.oo..oo.o", "ooooo.oooooooooooo.oooooo.o.oo", "oooooooooooo...oo.oooooo.o.ooo", "oooooooo..ooooooo.o.o.o..o.ooo", "oo.oo.ooo.ooo.o.ooooo.o.o.o.o.", ".oo.oooooooooooooooo..oooo.o..", "oooooooooooooooooo.ooooooooooo", "ooooooo..ooooooooo.oooo..o..oo", "oo.o.o.ooooooo..oooo.ooo.oooo.", "ooooooooo.oooo.ooooo..o.o..o.o", "ooooo.oooo.oooo.ooooo.oooooooo"}, 11));
    ExampleRunner.eq(68, 41, new DropCoins().getMinimum(new String[]{"ooooooooo.ooooooo.oooo.ooo.ooo", "oooooooo.ooooo.oooooo..ooooooo", "ooo.oooooo....o.oo.oooooooooo.", "oooo..ooooooooooo.ooo.oo.o.o.o", "ooooo..oooooooooooo.ooooooo.oo", "ooo.ooooo..oooooo.ooooo.o..ooo", "oo.ooooo.oooooooo.oo.o.oo.o.oo", "ooooooooooooooo.ooooo.oooooooo", "ooooooooooooooooooooooooo.o.o.", ".o.o.oooo.ooo..o.ooooooo.oo.oo", "o.ooooooooooo..oooooo.oooooooo", "o..ooooooooooo.oo.ooooo.oooooo", "oooo.ooooo.o.oooo..ooooo.oo..o", "oooooooooooooooooooooooooo.oo.", "o..o.ooooo.oooo.oooooooooo..oo", ".oooooooooo.o.oooooooooooooooo", ".o.ooo.ooo.o.ooooo..oo..o.oo..", "ooooooooooooooo.oooooooooooo.o", "o.o..oo.oooooooooooo.oooo.oo..", "oo..oo.oooo...oooo.ooooo.oooo.", "ooo.oooooo..ooooooooooooooo...", "o.ooo.ooo.ooooooo.oooooooooo.o", "ooooo.o.o.oooo...ooooooooooooo", "oooo...o.oooooooooo.oooooooo.o", ".oo.oooooooooo.ooooo.ooooo.ooo", "oo..oooooo...o..oooooooooooooo", "ooooooooo.oooo.oo.oooo.oooooo.", "ooooooo.oooooooooooooooo.ooooo", "o.oooooooooooooooooooo.o...ooo", "ooo.ooooo.oooo.ooo.ooo.o.ooooo"}, 12));
    ExampleRunner.eq(69, 42, new DropCoins().getMinimum(new String[]{"ooooo.oooooooooooo..ooooooo.oo", "ooooo.oo.ooooo.oooo.o.oooooooo", "o.oooooo.ooo.ooo.o.o.o.ooo.oo.", "o.o.o..oooooooo.oooooooo.ooooo", "ooooooo..oooo.oo..ooooooo.ooo.", ".ooooooo.oo..oo..oo..oo.oooooo", ".o.o.ooooooooooooooooo.ooooooo", "oooooooooooo.oo.o.oooooooooo.o", "oooooooooo.o.oo..oooooooooo.oo", "oooo.ooooo....oo.o.ooooo..oooo", ".ooooo.oo.oo...o.ooooooooooo.o", "oo.o.ooooooooo.oooooo.oooo..oo", "oo.ooo.ooooooo.ooooooo.o.o.ooo", "oo.oooooooooo.oooooooo.ooooo.o", "oooooooo.ooooo...ooooo.ooooooo", "oo.o.o..ooooo.ooo.o.oooooooooo", "ooooooooooooooooooooooooooo.oo", "ooooo.oooo...oo.oooooo.oooo.oo", "ooo..oooo.ooo.ooooooooooooo.oo", "oooo.ooooooooo.ooo.ooooooooo.o", "oo.oooooo.ooooooo.ooooooo.ooo.", "oooooooo.oooo.o.o.oooo.oo.oooo", ".oo.oo.oooooooo.ooo..oooooooo.", "ooo..o.oooooooooooooo.oooooooo", "..o..o.ooooooooooo..oooooooooo", "o.oooo.o.ooooooooooooooooooooo", "..ooo.oooo.ooooooooo.ooooooo.o", ".ooo.oo.ooooo..oo..ooo.oooooo.", "o..ooooooooooo.oo.ooooooo.oooo", "oo.ooo.ooooooooo.ooooooooooooo"}, 12));
    ExampleRunner.eq(70, 42, new DropCoins().getMinimum(new String[]{"ooooo.oooooooooooo.ooooo.ooooo", "...oooo..ooo..o.oooooooo.ooooo", "o.ooooooo.o.ooooooooo.oooo..oo", "oooooooooooooooooo.o.oooooo..o", "ooo..oooo.o.oooo.o.oooooo.oooo", "oo.ooooo.o...ooooooooooo.ooooo", ".o.oo.oooooooooooooo.ooo.oooo.", "ooo.oooooooooooooo.ooooo.ooooo", "ooooooo.oooo.oooooo.o.ooooo..o", "ooo.o.ooooo.o.o.o...ooooo.o.oo", "o.ooo..oooo.oooooooooooo..o.oo", ".ooo.ooo.oooooo.oooo..oo.ooo.o", "...o.oo.oo.ooooooo.oo..oo.o.oo", "oooo.oo.oo.oo...oooooooooooooo", "ooooooooooooooooooooo.o.oooooo", "ooooooooooo..o..o.oooooooo....", "o.oo.oo.oooooooo.oooooo.ooo.oo", "oo.ooooooooo..oooooooooooooooo", "oooooooo..oooo.o.ooooooooooooo", "oooooooooooooo.o...o.....o.ooo", "o...oooo.oooo.oooooooo.ooooo.o", "ooo.oooooo.ooooooo.ooooooooooo", ".oo.oooooooo.oooooooooo.oooooo", "o.oo.oooo...o.ooooo.o.oooo.oo.", "o.oo.o..oo.ooooo.ooo.ooooooooo", ".oo.ooo..ooo.o..oo.oooooo.oooo", ".ooooooooo.oooooo.o.oooo.o..oo", "ooooooooooo.oo.oooooooo.oooooo", "oo.ooooo.oooo.ooo.oooo.o.ooooo", "..o.o.oo.oooo..oooo.o.oooooo.o"}, 10));
    ExampleRunner.eq(71, 58, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 1));
    ExampleRunner.eq(72, 77, new DropCoins().getMinimum(new String[]{"..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "...............o..............", ".............oooo.............", "............ooooo.............", ".............ooooo............", ".............oooo.............", "..............o...............", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", ".............................."}, 16));
    ExampleRunner.eq(73, 4, new DropCoins().getMinimum(new String[]{"oooo", "o..o", "oooo"}, 1));
    ExampleRunner.eq(74, 58, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "ooooooooooooo...oooooooooooooo", "ooooooooooooo.o.oooooooooooooo", "ooooooooooooo...oooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 1));
    ExampleRunner.eq(75, 6, new DropCoins().getMinimum(new String[]{".................", ".ooooooo...oooo..", ".ooooooo..oooooo.", ".oo.......oo..oo.", ".oo.......oo..oo.", ".ooooo.....oooo..", ".ooooooo...oooo..", ".....ooo..oo..oo.", "......oo..oo..oo.", ".ooooooo..oooooo.", ".oooooo....oooo..", "................."}, 58));
    ExampleRunner.eq(76, 33, new DropCoins().getMinimum(new String[]{"o.oo..o.oo.o.o.o..oooooooo...o", ".oo..ooooo....o..oo.o..o...o.o", ".oooooooooo..o.ooo..oo..oooooo", "o.oo.ooooo.oooo.ooo..ooo......", ".o.o..ooooooo.o.oo.o..ooo...oo", ".oooo.o.oooooooo...o.o..oo.oo.", "o.ooooooo.o.ooooo.o.oooooo..o.", "o.oooo..o.ooooo...oo.o.o..o..o", "o.ooooooo...oo..o.o.ooo.ooo..o", ".o.oooo.oooooo..o..ooo....oooo", "oo.ooooo..o.oo.ooo.ooo.oooo...", "o..o.oo..oooo.o.o..o.oooo.oooo", ".o..ooo.......oo.ooo.ooooooo..", "o.oooo...oo..oo.oo.oooo..o..o.", ".o.ooo...oooooo.ooo.oo.oo.oo.o", "o..o.ooo...o.o.o..ooo.ooo.o.o.", ".ooooo.ooooo.ooo..oooo.oo..ooo", "oooo.o.o.oo.oo.oooo.oo.ooo.o.o", ".oo...ooo..oo.oooo.o.o.ooo..oo", "oooo.o.oooooooooo..o.ooooo..oo", "oooooo.o.o.o.oo..oooo.oooooo.o", "ooo..oo..oooo.oo.ooo.o.o..o..o", "ooo.o.ooo..oooooo.o..o..o.ooo.", ".o.oooooooo.o.o.oooo..oo..o.o.", "oo.ooooooo...ooooooo.....ooo.o", ".ooooo.oo.oo....oo..o.oo.o..oo", "ooooo.o.o.ooo.oooo.oo.ooo.oooo", "o..ooo.ooooooooo..o.oo.oo..oo.", "oo.o.ooo.oooo.o.o...oo.oo.oooo", "oo.ooooooo.o.o.ooo.ooo.oo.oooo"}, 12));
    ExampleRunner.eq(77, 2, new DropCoins().getMinimum(new String[]{".o..", "oooo", "..o."}, 3));
    ExampleRunner.eq(78, 58, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 1));
    ExampleRunner.eq(79, 4, new DropCoins().getMinimum(new String[]{".......", "..ooo..", "ooooooo", ".oo.oo.", "oo...oo"}, 12));
    ExampleRunner.eq(80, -1, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo"}, 222));
    ExampleRunner.eq(81, -1, new DropCoins().getMinimum(new String[]{"."}, 1));
    ExampleRunner.eq(82, 30, new DropCoins().getMinimum(new String[]{"o...o...oo.o.o..oo.o.ooo.o.o.o", "..o.....oo.oo.oooo.o..o.o.o...", "oo.o.o.o...o.o.oo..oo....oo.oo", ".oo.o.o..oo..oo.o...ooooo.o...", "o..o.o.o.ooo..ooo.o..oooo.o...", "o.....o.o..ooo.oo.o.ooooo.....", "oo..o..o..oooo.oo.oooooo..ooo.", "oo..oooooo..oo.oo.oo.o.ooooo.o", "o..oo.o.oo..ooo.ooo.ooooooooo.", "o.o.o...o..oo.o.o.o....o.o...o", "...o.oooooo..o...o..o.....ooo.", "o.o.ooooo..o...o..oooo..o.ooo.", "oo...oo...oo.oo..o...o..oo..oo", "oo.o.o...o..ooo.oooo......o...", "o.oo..oooooooo....o.o....o.oo.", "oooooo.oo..oo..o..o...o..o.o.o", ".ooo.oooo.o.oo.ooo.oo.o.o.oo..", ".oo.oo.oo.oooo..oooo.o.oo..o..", ".oo.oo.o..ooo...o...oo.ooo.o..", "oo.o.oo..o....oo.....o.oo.oo..", ".o....ooooo...o..oo.o..o.o....", "ooooo.......o..o..o......oo.oo", "...o..oo...o..oo..o.o...o..o..", ".oo..o..oo...o.o.o.....oo...o.", ".o..oo.o.oooooo..o.o.oooooo..o", ".ooooo..o.o..o..o.o.oo...ooooo", ".oo.o..o..oo.o.oo...oo.o.o..oo", "oo.oo.oooooo...oooo.o...o.....", "ooo.o.oo...oo...o..oo.o.o....o", ".ooo.oooo.oo.oo.....o.ooo.o.oo"}, 11));
    ExampleRunner.eq(83, 15, new DropCoins().getMinimum(new String[]{"..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............o...............", "..............................", "..............................", "...................o..........", "...........o..................", "..............................", "..............................", "..............................", "...............o..............", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", ".............................."}, 1));
    ExampleRunner.eq(84, 11, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "o............................o", "oooooooooooooooooooooooooooooo", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o..........o.................o", "o............................o", "o.........o..................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o..........................o.o", "o............................o", "o............................o", "oooooooooooooooooooooooooooooo"}, 2));
    ExampleRunner.eq(85, 30, new DropCoins().getMinimum(new String[]{".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.oo..o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o."}, 14));
    ExampleRunner.eq(86, 15, new DropCoins().getMinimum(new String[]{"o....o.oooooo.....oo.ooo.ooo.o", "......o....o.ooo..ooo.oo....o.", "oo..o...o...oooo...oo....oo.o.", "..ooooo.o.o.o.o.ooo.oooo.....o", ".o..oooo.o.o.oo..oooooo..oo...", "o...o.ooo.o.ooooo.o.o.o.oo.oo.", "..o...o.oo.ooo..o.o.o.ooo.....", ".ooo.ooo.o.ooooo.ooo.oo....oo.", ".o.o..ooo..oooo..o..oo....ooo.", "oo..o..oooo..o.o...o.o..oooo.o", "o..ooo.o...ooo.o.ooo.ooo.oo.oo", "..ooooooo.oo.o..oooo.o..o..o.o", "ooo....o.ooo..oo.o......oo.o..", ".o..o.o.oo.oooooo..oo.ooo.oo..", "ooo.....oo....o.oooooo.ooo.ooo", "oo........ooo..oooooo.oo.oo..o", ".oooo.o.oooooo.oo.....ooo..o..", "o.oo..o..o.o.o..o.o..oo.o.oo..", "o...o.oo..oo..oooo.oo..oooo...", "o..ooo.o..oo....ooo..o....o.oo", ".ooo.oo.o..o..o.ooooooo.o.o...", "oo.o.ooo.....o.o.o.oo.....ooo.", "o.oooo.o..o......ooo..o.oo....", "...oo...o.o.o.o...oo..o.o...o.", "o....o...oooo.o..oo..o...oo..o", "oo.o.o...oo..ooo.o....o.oo.o..", "o.oo....oo...o.ooo.oooo.o.oo..", "oo.oo.o.oo.ooooo...o...oooo..o", "o..ooo.o.o......oo.o..oooo...o", "..o....o....o..o.o.o.o..o.oo.o"}, 234));
    ExampleRunner.eq(87, 52, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 7));
    ExampleRunner.eq(88, 0, new DropCoins().getMinimum(new String[]{"o"}, 1));
    ExampleRunner.eq(89, 1, new DropCoins().getMinimum(new String[]{"....", ".ooo", ".o..", "...."}, 3));
    ExampleRunner.eq(90, 33, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 50));
    ExampleRunner.eq(91, 23, new DropCoins().getMinimum(new String[]{".............................", ".............................", ".........o...................", "..o...................o......", ".............................", "..........o..................", ".............................", ".................o...........", ".........................o...", ".............................", ".............................", "............o................", ".............................", "............o................", ".............................", ".............................", ".......o.....................", ".............................", ".............................", "............o................", ".....................o.......", ".............................", ".............................", ".............................", ".....o.......................", ".............................", "...................o.........", "..o....o.....................", "............................."}, 1));
    ExampleRunner.eq(92, 3, new DropCoins().getMinimum(new String[]{"...o...oooo.."}, 4));
    ExampleRunner.eq(93, 1, new DropCoins().getMinimum(new String[]{"oo"}, 1));
    ExampleRunner.eq(94, 41, new DropCoins().getMinimum(new String[]{"...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo.................", "...........oo................."}, 1));
    ExampleRunner.eq(95, 30, new DropCoins().getMinimum(new String[]{"oo..o.....ooooooo.o.o..o..o..o", "o.o.o.ooo.oo.oo.ooo.o..oooooo.", ".o.........o.o...oo.oo......o.", ".o.oo...ooooo...o.o.oo...oooo.", "..o.ooo.o...o...ooooooooooo.o.", "....o..o.o.o.o.ooo..o....o.o..", "o.oo....oo.o.ooo.oo.o.oo.oo..o", "...oo.oooooo.o.......oo.oo....", ".o.o.oo..o...o....ooo...o..ooo", "o..oo...ooo.oooo.o.o..oo..o.oo", ".o..oo.oo.o..oooo.oooo.oooo..o", "..o..o.o.ooooo...oo.o...o...oo", "o.o..o.oo...oo.o....oo.o.oo...", "...oo.oo.oo.o..o..oo.oooo.o.oo", "o.oooo......o.o...ooo..oo...o.", "oo....o..oo...o..o...o.o.oo..o", "..ooo.ooo.o...o.oooo......oooo", "o....o.o.o.o..ooo..oo.o.o.ooo.", "..o.o.o.o...oo...o.ooooo..o.o.", "ooooooo..oo.....oo.oooooo.o.o.", ".oooooo...oo..ooo.o..o.o..o.oo", "oo..oo...o.o.oo...o..ooo..o.oo", ".oo.o...oo.o.oooo..oo.ooooo.o.", "ooooo..o.o..o.o...oo.ooo.o.oo.", "..ooo....oooo..o..o.ooo...o.oo", "o.o.o...oo...o.ooooo.ooo.oo.oo", "oooo....o.....oo...o.oo.o.oo..", "ooo..o..ooooo..o..oo......oo.o", "..ooo..o.......ooo.oooo.....oo", "....o.o.o...ooo......oo.o.oo.o"}, 11));
    ExampleRunner.eq(96, 36, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "ooooooooooooo.oooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "ooooooooooooooo.oooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 47));
    ExampleRunner.eq(97, 11, new DropCoins().getMinimum(new String[]{oo......", "......................ooo.....", ".......................oo.....", "..............................", ".............................."}, 1));
    ExampleRunner.eq(98, 38, new DropCoins().getMinimum(new String[]{"..oo..oooo..oo....oo..oo..oo..", "..oo..oooo..oo....oo..oo..oo..", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo", "..oo..oooo..oo....oo..oo..oo..", "..oo..oooo..oo....oo..oo..oo..", "..oo..oooo..oo....oo..oo..oo..", "..oo..oooo..oo....oo..oo..oo..", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo..o.oooooo..oo..oo", "oo....oo..oo....oooooo..oo..oo", "oo....oo..oo....oooooo..oo..oo", "oooo..oo..oo......oooo..oo..oo", "oooo..oo..oo......oooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooo....oo..oo", "oooo..oo..oo....oooo....oo..oo", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo", "oooo..oo..oo....oooooo..oo..oo"}, 1));
    ExampleRunner.eq(99, 56, new DropCoins().getMinimum(new String[]{"ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo", "ooooooooooooooooooooooooooooo"}, 1));
    ExampleRunner.eq(100, 0, new DropCoins().getMinimum(new String[]{"oooo"}, 4));
    ExampleRunner.eq(101, 38, new DropCoins().getMinimum(new String[]{".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o", ".oo.o.o.o.o.o.o.o.o.o..o.o.o.o"}, 10));
    ExampleRunner.eq(102, 47, new DropCoins().getMinimum(new String[]{".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o", ".....o.....o.....o.....o.....o"}, 1));
    ExampleRunner.eq(103, 34, new DropCoins().getMinimum(new String[]{".o...ooo..ooo.o..ooooo..oo....", "o.o.oooo...o...ooooo..oo....oo", "......oo.o...oo..oo.ooo.oo..oo", "..o.o....o.o.oooo.o..oo.o.oo.o", "o.oo..oo...o.o...o.ooo.oo..oo.", "..o.oo.....o....o.o...o.o.o...", "o.o.o.oo....o.oo....o.o....o..", "oo...o....o..o.ooo...o.oo.oooo", "oo.o.oo.o..oo...o..o.oooooo...", ".ooooooo....oo.oo.oo.o.o.oo..o", "oo..oo....o....oooo.o......o..", "...oo.oooooo.o.o..oo..o..o.oo.", "o.o.o.o.o..ooo........o..o.o..", "o.......o....oo...oo..oo..o.oo", "o.o..oooooooo..ooo.ooo..ooo..o", "...ooo.....o.o..o.....o.....oo", "oooo..oo.o.ooo.o..oooo.....ooo", "ooo..ooo.oo.oo..o....oo.o..oo.", "ooooooooo.oo....o.....oo.o.o..", ".o..oo...oooo.o.o...o.oo....o.", "oo.o.ooo..o.....o.....o...oo.o", "..oo....oo.o.oo...oo.o...oooo.", "oooo...ooo.oo.oo.ooooooo...o.o", "....o..o....o.oo.o..o.o...o..o", "..oooo.oo....o.oo.o...o...oo..", ".......o.oooo.oooooo.o.oo.oo..", "oo.oooooo......oo.....oooooooo", "..oooo.ooo..oo.oo.oo.oooo.oooo", "o.o..oo.oo.oo.oooo.o.o.o..oo..", ".oo.ooo..o.o.ooo.....o...oo..."}, 10));
    ExampleRunner.eq(104, 56, new DropCoins().getMinimum(new String[]{"o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", "o.o.o.o.o.o.o.o.o.o.o.o.o.o.o.", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o"}, 1));
    ExampleRunner.eq(105, -1, new DropCoins().getMinimum(new String[]{".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o", ".o.o.o.o.o.o.o.o.o.o.o.o.o.o.o"}, 527));
    ExampleRunner.eq(106, 1, new DropCoins().getMinimum(new String[]{oo"}, 1));
    ExampleRunner.eq(107, -1, new DropCoins().getMinimum(new String[]{o...", "..............................", ".............................."}, 900));
    ExampleRunner.eq(108, -1, new DropCoins().getMinimum(new String[]{"....", ".oo.", ".oo.", "...."}, 3));
    ExampleRunner.eq(109, 5, new DropCoins().getMinimum(new String[]{"...............", "...............", "..o....o......o", "...............", "..............."}, 1));
    ExampleRunner.eq(110, 43, new DropCoins().getMinimum(new String[]{"oo.o..oo..o..oo.o..o.oo.o.o...", ".ooooooo...oooo..ooooo..ooo..o", ".ooooooo..oooooo.oo..ooo..oooo", ".oo..o.oo.oo..oo.ooooooooooooo", ".oo.o.o...oo..oo.ooooooooooooo", ".ooooo.....oooo..oo.oo..oooooo", ".ooooooo...oooo..ooo..o.oooooo", ".o.o.ooo..oo..oo.ooooooo.ooooo", ".o.o..oo..oo..oo.oooo.ooo.oooo", ".ooooooo..oooooo.ooo..o.o.oooo", ".oooooo....oooo..o.o..o.oooo.o", "o...o.ooo...ooo..o..o..o.o..oo", "oo.o..oo..o..oo.o..o.oo.o.o...", ".ooooooo...oooo..ooooo..ooo..o", ".ooooooo..oooooo.oo..ooo..oooo", ".oo..o.oo.oo..oo.ooooooooooooo", ".oo.o.o...oo..oo.ooooooooooooo", ".ooooo.....oooo..oo.oo..oooooo", ".ooooooo...oooo..ooo..o.oooooo", ".o.o.ooo..oo..oo.ooooooo.ooooo", ".o.o..oo..oo..oo.oooo.ooo.oooo", ".ooooooo..oooooo.ooo..o.o.oooo", ".oooooo....oooo..o.o..o.oooo.o", "o...o.ooo...ooo..o..o..o.o..oo", "o...o.ooo...ooo..o..o..o.o..oo"}, 1));
    ExampleRunner.eq(111, 5, new DropCoins().getMinimum(new String[]{"........o........", "........o........", ".....oooo........", ".................", ".................", ".................", ".................", ".......oo........", "........o........"}, 2));
    ExampleRunner.eq(112, 1, new DropCoins().getMinimum(new String[]{"ooo", ".oo"}, 4));
    ExampleRunner.eq(113, 16, new DropCoins().getMinimum(new String[]{".............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", "o............................o", ".ooooooooooooooooooooooooooooo"}, 30));
    ExampleRunner.eq(114, -1, new DropCoins().getMinimum(new String[]{".ooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 900));
    ExampleRunner.eq(115, -1, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 31));
    ExampleRunner.eq(116, 43, new DropCoins().getMinimum(new String[]{"oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo", "oooooooooooooo.ooooooooooooooo"}, 1));
    ExampleRunner.eq(117, 0, new DropCoins().getMinimum(new String[]{"ooo", "ooo", "ooo"}, 9));
    ExampleRunner.eq(118, 32, new DropCoins().getMinimum(new String[]{"ooooooooooooooo...............", "ooooooooooooooo...............", "ooooooooooooooo...............", "ooooooooooooooo...............", "ooooooooooooooo...............", "ooooooooooooooo...............", "ooooooooooooooo..............o", "ooooooooooooooo.............oo", "ooooooooooooooo............ooo", "ooooooooooooooo...............", "ooooooooooooooo...............", "ooooooooooooooo...............", "ooooooooooooooo...............", "ooooooooooooooo...............", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "ooooooooooooooo............ooo", "ooooooooooooooo............ooo", "ooooooooooooooo............ooo", "ooooooooooooooo............ooo", "ooooooooooooooo............ooo", "ooooooooooooooo............ooo", "ooooooooooooooo............ooo", "ooooooooooooooo............oo.", "ooooooooooooooo............o..", "ooooooooooooooo............o.o", "ooooooooooooooo.....ooo.o.o.oo"}, 18));
    ExampleRunner.eq(119, 19, new DropCoins().getMinimum(new String[]{"...o.o..ooooooooooooooo.......", "..............................", "..............................", "..............................", "...o.o..ooooooooooooooo.......", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", ".......ooooo..................", "..............................", ".......ooooo..................", "..............................", "..............................", "..............................", "..............................", "..............................", "...o.o..ooooooooooooooo.......", "..............................", "..............................", "..............................", "..............................", "...o.o..ooooooooooooooo.......", "..............................", "..............................", "..............................", "..............................", "...o.o..ooooooooooooooo......."}, 20));
    ExampleRunner.eq(120, -1, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooo.ooooooooooooo"}, 900));
    ExampleRunner.eq(121, 58, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "ooooooooooooo.o.oooooooooooooo", "ooooooooooooo...oooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 1));
    ExampleRunner.eq(122, -1, new DropCoins().getMinimum(new String[]{"..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............oo..............", "..............oo..............", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", "..............................", ".............................."}, 3));
    ExampleRunner.eq(123, 28, new DropCoins().getMinimum(new String[]{"oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo", "oooooooooooooooooooooooooooooo"}, 30));
    ExampleRunner.eq(124, 28, new DropCoins().getMinimum(new String[]{"o.o.o.oo.ooo..o..ooooooooo.ooo", ".oo..oo.oo........o.ooooooo.oo", "..oo........o..ooooo.o.ooo....", "..o..oo....o...o.o...o.o.o.oo.", ".o.ooooooooo.o.o.o....o..ooooo", ".....ooo.......o.....o.o..oooo", "o.o.o.o.ooooooooo.oo..oooooo.o", "..ooo..oo.....ooo...oo.ooo.o..", "..oooo.....ooo.oooo..oo.o.oo..", "o..o....oo.oo.oooo.ooo..o.o.oo", "ooooo..o..o.oo..o...oo.o....o.", ".o...oo..oo..ooooo....o..oo...", "....oo.oo...ooo.oo.oo.o.ooo.o.", "..o.oo..oo.......oo.o.ooo..ooo", "o..ooo.o.oooooo.oo.o.o.o.o.o..", "ooo.oo..o.....o..oo.oo..o.o..o", ".ooo..o.o.oo.o..ooo.oo.oo.oo.o", "..oo..o..o.o..o..o.oooo..ooo.o", "o..o..oo....oooooo...o...o.oo.", ".oooo..o.o..o.o..ooo.o.o.oo.o.", "o.ooo.oo..o.o..oo.o.oo.oooo.oo", "o.ooooo.ooo......o.o........oo", "o.oo......o.o.ooo.ooooooo....o", "....o.........o...o..o..o.oo..", ".o.oo.oo.ooo.o..o.o.ooo.o.o.o.", "..o....ooooo.o...o.ooo....o.oo", "o...o....oo.o.oooo.o.o.ooooo.o", ".o.oooooo...o.o.o..oo.o...oo..", "o.....o.oo.oooo.ooo.o.o.o.oo.o", "oooooo...o..oo.oo..ooooo.oo.o."}, 67));
    ExampleRunner.eq(125, 11, new DropCoins().getMinimum(new String[]{"....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo....................", "....oooooo...................."}, 100));
  }
}
