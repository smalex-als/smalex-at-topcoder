package p400.srm440;

import utils.ExampleRunner;

import java.util.LinkedList;

/**
 * Created by smalex on 28/05/15.
 */
public class MazeWanderingEasy {
  private static final int[] yx = new int[]{-1, 0, 0, 1, 1, 0, 0, -1};

  private static class Item {
    int x;
    int y;
    int ans;

    public Item(int x, int y, int ans) {
      this.x = x;
      this.y = y;
      this.ans = ans;
    }
  }

  public int decisions(String[] maze) {
    LinkedList<Item> queue = new LinkedList<Item>();
    final Item mouse = findMouse(maze);
    queue.add(mouse);
    final int MAX_X = maze[0].length();
    final int MAX_Y = maze.length;
    boolean[][] visited = new boolean[MAX_Y][MAX_X];
    visited[mouse.y][mouse.x] = true;
    while (!queue.isEmpty()) {
      final Item item = queue.poll();
      if (maze[item.y].charAt(item.x) == '*') {
        return item.ans;
      }
      int ans = item.ans;
      if (adj(maze, queue, MAX_X, MAX_Y, visited, item, false, 0)) {
        ans++;
      }
      adj(maze, queue, MAX_X, MAX_Y, visited, item, true, ans);
    }
    return 0;
  }

  private boolean adj(String[] maze, LinkedList<Item> queue, int MAX_X, int MAX_Y, boolean[][] visited, Item item,
                      boolean real, int ans) {
    int cnt = 0;
    for (int i = 0; i < yx.length; i += 2) {
      int nextX = yx[i + 1] + item.x;
      int nextY = yx[i] + item.y;
      if (nextX >= 0 && nextX < MAX_X && nextY >= 0 && nextY < MAX_Y && !visited[nextY][nextX]) {
        final char c = maze[nextY].charAt(nextX);
        if (c == '.' || c == '*') {
          if (real) {
            visited[nextY][nextX] = true;
            queue.add(new Item(nextX, nextY, ans));
          }
          cnt++;
        }
      }
    }
    return cnt > 1;
  }

  private Item findMouse(String[] maze) {
    Item item = null;
    for (int i = 0; i < maze.length; i++) {
      String s = maze[i];
      for (int j = 0; j < s.length(); j++) {
        if (s.charAt(j) == 'M') {
          item = new Item(j, i, 0);
        }
      }
    }
    return item;
  }

  public static void main(String[] args) {
    ExampleRunner.eq(1, 0, new MazeWanderingEasy().decisions(new String[]{"*.M"}));
    ExampleRunner.eq(2, 1, new MazeWanderingEasy().decisions(new String[]{"*.M", ".X."}));
    ExampleRunner.eq(3, 2, new MazeWanderingEasy().decisions(new String[]{
        "...",
        "XMX",
        "..*"}));
    ExampleRunner.eq(4, 3, new MazeWanderingEasy().decisions(new String[]{".X.X......X", ".X*.X.XXX.X", ".XX.X.XM...", "......XXXX."}));
    ExampleRunner.eq(5, 0, new MazeWanderingEasy().decisions(new String[]{"..........*", ".XXXXXXXXXX", "...........", "XXXXXXXXXX.", "M.........."}));
    ExampleRunner.eq(6, 2, new MazeWanderingEasy().decisions(new String[]{"..........*", ".XXXX.XXXXX", "....X.X....", "XXX.XXXXXX.", "M.........."}));
    ExampleRunner.eq(7, 0, new MazeWanderingEasy().decisions(new String[]{"M.", "X*"}));
    ExampleRunner.eq(8, 1, new MazeWanderingEasy().decisions(new String[]{"M..", "X*X"}));
    ExampleRunner.eq(9, 1, new MazeWanderingEasy().decisions(new String[]{"X*X", "M.."}));
    ExampleRunner.eq(10, 1, new MazeWanderingEasy().decisions(new String[]{"X*X", ".M."}));
    ExampleRunner.eq(11, 1, new MazeWanderingEasy().decisions(new String[]{"X*X", ".M.", "X.X"}));
    ExampleRunner.eq(12, 1, new MazeWanderingEasy().decisions(new String[]{"X.*", "..X", "XMX"}));
    ExampleRunner.eq(13, 4, new MazeWanderingEasy().decisions(new String[]{"......MX.X*X.X", "X.XXXX.X.X.X.X", "..X..........."}));
    ExampleRunner.eq(14, 1, new MazeWanderingEasy().decisions(new String[]{"MX..*X.X", ".X.XXX.X", "........"}));
    ExampleRunner.eq(15, 1, new MazeWanderingEasy().decisions(new String[]{"M...*X.X", "XX.XXX.X", "........"}));
    ExampleRunner.eq(16, 2, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXX", "XX.XXX*X", ".....M..", ".X.XXX.X"}));
    ExampleRunner.eq(17, 1, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXX", "XX.XXX*X", "......M.", ".X.XXX.X"}));
    ExampleRunner.eq(18, 0, new MazeWanderingEasy().decisions(new String[]{"XX.XXXXX", "X.*....X", "XX.XXXMX", "XX.XXXXX"}));
    ExampleRunner.eq(19, 1, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXXXXXXXXXXX", "XXX.XX.XXXXXXXXXX", "XX.*..M.XXXXXXXXX", "XXX.XX.XXXXXXXXXX", "XXXXXXXXXXXXXXXXX"}));
    ExampleRunner.eq(20, 3, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXXXXXXXXXXX", "XXX.XX.XX.XX.XXXX", "XX.*........M.XXX", "XXX.XX.XX.XX.XXXX", "XXXXXXXXXXXXXXXXX"}));
    ExampleRunner.eq(21, 0, new MazeWanderingEasy().decisions(new String[]{"*..", ".X.", ".MX"}));
    ExampleRunner.eq(22, 1, new MazeWanderingEasy().decisions(new String[]{"*..X.X.X.X.X", ".X.X.X.X.X.X", ".MXX........", "X....XXX.X.X"}));
    ExampleRunner.eq(23, 1, new MazeWanderingEasy().decisions(new String[]{"M..X.X.X.X.X", ".X.X.X.X.X.X", ".*XX........", "X....XXX.X.X"}));
    ExampleRunner.eq(24, 1, new MazeWanderingEasy().decisions(new String[]{"X.X", ".M.", ".X*"}));
    ExampleRunner.eq(25, 1, new MazeWanderingEasy().decisions(new String[]{"XMX", "...", ".X*"}));
    ExampleRunner.eq(26, 4, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXMXXXXXXX", "...............", ".XX.XX.X.XX.XX.", ".XXXXX.X.XXXX..", ".XX*XX.XXX...XX", ".....X.....X..."}));
    ExampleRunner.eq(27, 5, new MazeWanderingEasy().decisions(new String[]{"XXX.X.X.XXXXXXX", "...............", ".XX.XX.X.XX.XX.", ".XXXXX.X.XXXX..", ".XX*XX.XXXM..XX", ".....X.....X..."}));
    ExampleRunner.eq(28, 4, new MazeWanderingEasy().decisions(new String[]{"XXX.X.X.XXXXXXX", "...............", ".XX*XX.X.XX.XX.", ".XXXXX.X.XXXX..", ".XX.XX.XXX...XX", ".....X.....X.M."}));
    ExampleRunner.eq(29, 3, new MazeWanderingEasy().decisions(new String[]{"XXX.X.X.XXXXXXX", "...............", ".XX*XX.X.XX.XX.", ".XXXXX.X.XXXX..", ".XX.XX.XXX...XX", ".....X.....X..M"}));
    ExampleRunner.eq(30, 20, new MazeWanderingEasy().decisions(new String[]{".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", "M.......................................*", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X."}));
    ExampleRunner.eq(31, 280, new MazeWanderingEasy().decisions(new String[]{".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", "M........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".*......................................."}));
    ExampleRunner.eq(32, 279, new MazeWanderingEasy().decisions(new String[]{".XMX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X*X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", "........................................."}));
    ExampleRunner.eq(33, 273, new MazeWanderingEasy().decisions(new String[]{".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", "..............*..........................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".M......................................."}));
    ExampleRunner.eq(34, 280, new MazeWanderingEasy().decisions(new String[]{"*X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".M......................................."}));
    ExampleRunner.eq(35, 40, new MazeWanderingEasy().decisions(new String[]{"XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.XMX.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".....................*...................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", "...X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".X......................................."}));
    ExampleRunner.eq(36, 527, new MazeWanderingEasy().decisions(new String[]{".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", "M........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", "*X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", "........................................."}));
    ExampleRunner.eq(37, 463, new MazeWanderingEasy().decisions(new String[]{".X.X.X.X*X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".XMX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", "........................................."}));
    ExampleRunner.eq(38, 396, new MazeWanderingEasy().decisions(new String[]{".X.X.X.X*X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.XX.X.XX.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.XXX.X.X.X.X.X.X.X.X.X.X.X.X.X.", "X........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".X.XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".X.......................................", "..X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".X.......................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XXM", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", "........................................."}));
    ExampleRunner.eq(39, 294, new MazeWanderingEasy().decisions(new String[]{".X.XXXXXXXXXXXXXXXXXXX.X.X.X.X.X.X.X.X.X.", "...XXXXXXXXXXXXXXXXXXX...................", ".X..X.X.X.X.X.X.X..XXXX*X.X.X.X.X.X.X.XX.", ".XXXX.X.X.X.X.X.X.XX.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".XX.X.X.X.XX.X.XX.X.X.X.X.X.X.X.X.X.X.X.X", ".X.X.X.X.X.XXX.X.X.X.X.X.X.X.X.X.X.X.X.X.", "X........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", ".X.XX.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.XX", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XMX.", ".X....................................X..", "..X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".X...................................X...", ".XX.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.XX.XXXX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", ".........................................", "X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.XX.", ".X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.X.", "........................................."}));
    ExampleRunner.eq(40, 7, new MazeWanderingEasy().decisions(new String[]{".........M...................................X....", "XXXXXXXXXXXX.XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", "..................................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "..................................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", "..................................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "..................................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", "..................................................", "XXXXXXX.XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "..................................................", "XXXXX.XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "..................................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "..................................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", "..................................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "..................................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", "..................................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "..................................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", "..................................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "..................................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", "..................................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "..................................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", "..................................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "..................................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", "..................................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "..................................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", "..................................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "..................................................", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.", "..................................................", ".XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", ".................................................*"}));
    ExampleRunner.eq(41, 3, new MazeWanderingEasy().decisions(new String[]{"..X.X..", "X.....X", "..XXXXX", ".X.M..X", ".X.XXXX", ".X...*.", "...X.XX"}));
    ExampleRunner.eq(42, 0, new MazeWanderingEasy().decisions(new String[]{"..X.X", "X..*.", "XXX.X", "X...X", "X.XXX", "X.XMX", "X...X"}));
    ExampleRunner.eq(43, 3, new MazeWanderingEasy().decisions(new String[]{"XMX...X..", "X...XX..X", "..X....X.", ".X.X*X.X.", "...XX...."}));
    ExampleRunner.eq(44, 2, new MazeWanderingEasy().decisions(new String[]{"*XXX", ".XXX", ".XMX", "....", "X.X."}));
    ExampleRunner.eq(45, 2, new MazeWanderingEasy().decisions(new String[]{"X*X.XX.X", "X.....MX"}));
    ExampleRunner.eq(46, 1, new MazeWanderingEasy().decisions(new String[]{"X", "X", ".", "*", ".", "M", ".", ".", ".", "X"}));
    ExampleRunner.eq(47, 2, new MazeWanderingEasy().decisions(new String[]{"*XXX.M", ".....X", "X.XX.X", "XXXX..", "X....X", "..XXXX"}));
    ExampleRunner.eq(48, 2, new MazeWanderingEasy().decisions(new String[]{".X..XXX", "...XXXX", "X.XX.XX", "X*...M.", "XXXX.XX"}));
    ExampleRunner.eq(49, 5, new MazeWanderingEasy().decisions(new String[]{"X.X...X", "*..XX.X", "XX..X..", "XXX.XMX", "XX..X.X", "..X...X", "X...X.."}));
    ExampleRunner.eq(50, 0, new MazeWanderingEasy().decisions(new String[]{"M*.X.XX", "X.XX...", "X...XX.", "X.X.X..", "..X...X", ".XX.X..", "XX..X.X"}));
    ExampleRunner.eq(51, 1, new MazeWanderingEasy().decisions(new String[]{".M.....", "*X.X.XX", ".X..XX.", "..XX.X.", ".XX....", "....X.X", "X.XXX..", "..XXXX."}));
    ExampleRunner.eq(52, 3, new MazeWanderingEasy().decisions(new String[]{".XX.XX..", "....X.X.", "X.X.....", ".X..X*XX", "..XX....", "X.X.X.XX", "....M..."}));
    ExampleRunner.eq(53, 1, new MazeWanderingEasy().decisions(new String[]{".X.*M...", "...X.XXX", "X.XX...."}));
    ExampleRunner.eq(54, 1, new MazeWanderingEasy().decisions(new String[]{".*....XX", "XMXXX.X.", "X..X....", "X.X..XX."}));
    ExampleRunner.eq(55, 0, new MazeWanderingEasy().decisions(new String[]{"XXXX.....", "...X.XX.X", "XX..XXX.X", "XXX....*M"}));
    ExampleRunner.eq(56, 0, new MazeWanderingEasy().decisions(new String[]{"..........", ".X.XXXXXX.", "XX...X.*..", "X..X.XMXX."}));
    ExampleRunner.eq(57, 2, new MazeWanderingEasy().decisions(new String[]{".X...*X.X.", ".XX.X...X.", "..X.XXX.X.", "X.M.XX...."}));
    ExampleRunner.eq(58, 1, new MazeWanderingEasy().decisions(new String[]{"......*.XXX", "X.XXX.X....", "..XMX.XX.X.", ".XX...XX.X."}));
    ExampleRunner.eq(59, 3, new MazeWanderingEasy().decisions(new String[]{"XXXX.XXXXX", ".XXX.XXX.X", ".X*....X.X", "M.XXXX...X", "X......X.."}));
    ExampleRunner.eq(60, 2, new MazeWanderingEasy().decisions(new String[]{"X..XX..*.X..", "..X.XXX.X.X.", "X....M......"}));
    ExampleRunner.eq(61, 2, new MazeWanderingEasy().decisions(new String[]{"XX.X", ".X.X", "....", ".X.X", ".X.*", "XXMX", "X...", "X.XX", "...X", "XX.X", "...X", "XX.X", "XX.."}));
    ExampleRunner.eq(62, 2, new MazeWanderingEasy().decisions(new String[]{"....XX", "X.X..X", ".X.X.X", "......", ".X.X.X", "X.XM..", "X...X.", ".XX.X.", "..X.*X", "X..X.X", "XX...."}));
    ExampleRunner.eq(63, 1, new MazeWanderingEasy().decisions(new String[]{"X.XXXX", "..X.X.", "X.X.X.", "......", ".XX.X.", "..XXXX", "X..XX.", "X.X.*.", "X..MX."}));
    ExampleRunner.eq(64, 3, new MazeWanderingEasy().decisions(new String[]{"..X.....X", ".X..X.XX.", "...XXX.X.", ".X..X....", "..X..X.XX", "X..X....*", ".XX..X.XX", "....X....", ".XMX..X.X"}));
    ExampleRunner.eq(65, 11, new MazeWanderingEasy().decisions(new String[]{".X.X..X..X.XX..", "...X.XMX.....X.", ".X.X.X...XX.X..", "X..X..X.X..X..X", ".X.X.X...X...X.", ".X....X.X..XX..", "...X.X..X.XX..X", "X.X...X...X..X.", ".X.XX...XX.X...", "......X......X.", "XX.XX.X.XXX.X..", ".....X.....X..X", "XXXXX..XX.X*XX.", "......X........", "XXX.X..X.X.X.X.", ".....X.X.X..X..", "X.XX.XX.X..X.X.", "XX.......X....X", "XXX.X.XX.X.X.XX"}));
    ExampleRunner.eq(66, 3, new MazeWanderingEasy().decisions(new String[]{"...X..X...X.X......X......", "X.X.X...XX....X.X.XXX.X.XX", "..X..XX...XXX.XX.X.X.XX...", ".X.X..X.XX.......X...X..XX", ".X..X.....XXXX.XX.X.X..X..", ".X.X.XXX.X...X.X....X.X..X", ".X.....X..XX...X.X.X...X.X", ".XX.X.X..X..X.X..XX..XX...", ".....X.X.X.X...X..X.X...XX", ".XX.X..X....X.X..XX.X.XXX.", "X....X...X.X..X.XX..X.X...", "XX.X..X.X...X...X..X....X.", "XXX..X.X.XX...XX.X...XXX.X", "XX.X........X......X......", "X....XXX.XX.X.XXX.X.X.X.X.", "..X.X......X.....X...X...X", ".X.X.XXXXXX..XX.X.X.X.XX..", "X..X.X......X...........X.", "..X...XXX.X..X.X.X.XX.X..X", "X..XX......XXX.X.X...X.X..", ".X....X.XX.X..X..X.X.X.X.X", "...XX..XM....XXX..X.X...X.", ".X..X.XXX.X*XXXX.XX.X.X.X.", ".X.X..XX...X.XX.......XXX.", "X..X.X...X.....XX.X.X.....", "..X..X.X.X.X.X.X...X..X.X."}));
    ExampleRunner.eq(67, 11, new MazeWanderingEasy().decisions(new String[]{"...X.....X.X...X.X..", "X.X..XXX.....X.X..X.", "...XX..X.X.XX.X.X.X.", ".X.X..X.X...........", "X...X...XX.XX.X.XX.X", ".XX..XX......X.X.X..", ".X.X..MX.X.XX..X..XX", "....X.XXX...X.X.X...", "XXX.X.XX.XX.......X.", ".........X..XXX.XX.X", "X.X.X.XX...X...XX...", "..X..X...X...XXX..X.", "X..XX.XX.X.X.....X..", "..X.......XX.X.XX.XX", "X..X.XXX.XX..X......", ".XX.X......X..X.X.X.", ".X....X.X.X.X.X..X..", "...XX..X.....XXX..XX", "XXX...X.X.X.X.X.X...", "*...X...X..X......X."}));
    ExampleRunner.eq(68, 14, new MazeWanderingEasy().decisions(new String[]{".X..X....XX.......X.", "...X.X.X...X.X.XXX..", ".X...X..X.XXX..X..X.", ".X.X...X.XXX.X..X...", "X.X..X....X..X.X..X.", "X..XX.X.XX.X.....X.X", "..XX..X..X..X.X.X..X", "X...X..X..X..X...X..", "X.XX.X.X.X.X.XX.X.X.", "....................", ".X.X.X.X.X.X.X.X.X.X", "..X...X..X.XX.XX..X.", "XX.X.XXX.X......X...", ".....XX..X.XX.X.X.X.", ".X.XX...X....XX.X.X.", "X.XXXXX..X.X...X.X..", "...XX...X...X.X...X.", ".X....X..X.XX.X.XX..", ".X.XXX..XX.X.X..*.X.", ".MX....X.......X.X.."}));
    ExampleRunner.eq(69, 5, new MazeWanderingEasy().decisions(new String[]{".X....XXX.", ".X.X.X.X..", "...XX...X*", "XX..XX.XX.", ".XX.......", "..X.XMX.X.", "X...X.XX..", "XX.X....X.", "X..XX.XXX.", "..X....X.."}));
    ExampleRunner.eq(70, 4, new MazeWanderingEasy().decisions(new String[]{"X.X.X.X.X.X*...X", "..........X.XX..", "XX.XXMX.X....XXX"}));
    ExampleRunner.eq(71, 2, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXXX.....X.XX.X.X.X.X.X.XMXX*XX....XXXX", "XXXXXXXXXX.XX........................X.XXXXX"}));
    ExampleRunner.eq(72, 3, new MazeWanderingEasy().decisions(new String[]{"XXX", "XXX", "XXX", "XXX", "XXX", "XXX", "XXX", "XXX", "XXX", "XXX", "XXX", "XXX", "XXX", "XX.", ".X.", ".X.", ".X.", ".X.", ".X.", "...", ".X.", "..X", "X..", ".X.", "...", "X.X", "*..", "XX.", "...", ".X.", "XM.", "XX.", "X..", "..X", "X..", "XX.", "...", "XX.", "XX.", "XXX", "XXX", "XXX", "XXX", "XXX", "XXX", "XXX", "XXX", "XXX", "XXX", "XXX"}));
    ExampleRunner.eq(73, 5, new MazeWanderingEasy().decisions(new String[]{"XXX..", "XXX.X", "XX..X", "X.X..", "..X.X", ".XX..", "...X.", ".XX..", ".X.X.", ".X...", "..X.X", "X...X", "..XX.", "X..X.", "X.X..", "..X.X", "X...X", "..X..", "XX..X", "...X.", ".X.X.", "X....", ".XX.X", ".....", ".X.X.", "X...X", "..X..", ".X.X.", "....X", "X.XX.", ".....", ".X.X.", ".X.*X", ".X.X.", "X....", "..XX.", "X.X..", "...XX", "X.X..", "M...X", "X.X..", "X.X.X", "..X..", "X.X.X", "...X.", ".XX..", "....X", ".X.XX"}));
    ExampleRunner.eq(74, 15, new MazeWanderingEasy().decisions(new String[]{"XX.X.X.X", "X.......", ".XX.X.X.", "...X...X", "X.X..XX.", "....XX..", ".X.X...X", "X..XX.X.", "..X.....", ".X.X.X.X", ".X..X...", "...X.XX.", ".X.X....", "..X..X.X", "X..XX...", "..X..X.X", "X...X...", ".X.X.X.X", "*..X.X..", ".X.X...X", "X...X.X.", "..X.....", "X..X.XXX", "X.XX....", "..X..X.X", ".X.X.X..", "X....X.X", ".X.X.X..", "..X...X.", "X...X.X.", "..X.XX..", "XX....XX", "...XX...", ".X.X..X.", "X...X..X", "X.X..X..", "..XX..X.", "X...XXX.", "..X....X", "X..XMX..", "..XX..X.", ".X..X..X", ".X.X.XXX", "...X.X.X", ".X......"}));
    ExampleRunner.eq(75, 9, new MazeWanderingEasy().decisions(new String[]{"..XXXXX.XXXX", "X..XXX....XX", "..XXX..X.XX.", ".X.X.X..X...", ".X...X.X.X.X", "..XX...X....", "X.X.X.XMX.XX", "X.......X.X.", ".X.XX.XXX...", ".X.X..X...X.", "..X.X..XX..X", ".X..X.XXX.X.", "..X.X..X....", "X.X.X.X.X.X.", "........X..X", ".X.X.X.XXX..", "..X*X...X..X", ".X....XX.X.X", "X.XX.X...X..", "......X.X..X", ".X.XX.....X.", ".X...X.XXX..", "X..X.X....X.", "X.X.X..XX...", ".X....X.XX.X", ".XX.X....X..", "....X.X.X..X", ".XXX..X..X..", "X....X..X.X.", ".X.X.XXX....", ".XX.....X.X.", "....XX.X.X..", "X.X.X.....X.", "XX...X.X.X..", "X..X.X.X..X.", "..X..X..XXX.", ".XXX.X.XX...", "XXX..X...XX.", ".X..X..X..X.", "...XXX.X.X..", "X.X.X..X..X.", ".....X..X.XX"}));
    ExampleRunner.eq(76, 6, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXXX.X...XX.....X", "XXXXXXXXX..XX..XXXX.XX", "XXXXXXXXX.X.X.XXX....X", "XXXX.XXX..X.X..XXXX.X.", "XXXX..X..X..X.X.X...X.", ".XX..X.X..X...X.X.X...", ".X.X.....X..X.X..X..XX", ".....X.X..X..X..X..X..", "X.X.X..X.X..X*X..X..X.", ".X.X.XX....XX.X.XX.XX.", ".....X.XX.X...X.......", "XXX.X......X.X..XXX.X.", "X.....X.XX.....X...X.X", "..X.XX..X.X.XXX..XX...", ".XXX..XX..X....X..MX.X", ".XXXX..X.X..XX...XX...", "XXXX.X.....X.XX.X...XX", "..X...XX.X....X...XX..", "X.X.XX....XX.X..X....X", "X......X.X.XX..XXX.XX.", ".X.X.XX......X..X.....", "...X...X.X.XX..XX.X.X.", ".X..X.X..X...X...X...X", "..X.X.XXX..X.X.X..X.X.", "X.X.XXX...XX.X.X.XX.X.", "X..X...XX.X...XXX.....", "..XX.X.....XX...X.X.X."}));
    ExampleRunner.eq(77, 15, new MazeWanderingEasy().decisions(new String[]{"..X.XX..XXXX.X....X.XXXXX.", ".X..XX.X.XX....X.X...XXX..", ".XX.........X.X.XX.X..XXX.", ".XXX.XX.XXXX.X..XXXX.X.X..", ".X...X..X.....X..XX......X", "..XXX.X..X.XX...X..X.X.X..", "X..X...X..X...XX.X.X.XX.XX", "..X.XX.XX.X.X..X.X.X.....X", "X...X...X..XM.X..X...X.XX.", ".XX.X.X...X.X..X...X..X.X.", "..X..X.XX.....X..X.XXX....", "X...X...X.XX.X.X..XX..X.X.", ".XX..XX..X.X...X.X..X..X..", "...X.X..X....XX...X...X.X.", ".X.....X.XXX...X.X.XX.....", "X.XXXX...X..XX........X.X.", "......XX.X.X.X.XX.X.X.X.X.", "XXXXX........X...X.X.X.X..", ".....X.X.X.X...XX....X.XX.", "X.XX....X.X..X.X.XX.XX..X.", "..X.XX.X....X..........X.X", "XX....X..X.X..X.XX.X.XX...", "...XX...X...XX...X.X....X.", "XXXX.X.X..X...X.XX.X.X.XX.", "........XXX.XX..X..XX....X", "X.XX.XXX....X..X.X...X.X..", "XX.XX....X.XXX...X.X..X.X.", "XX...X*X.X..X..X..X.X.X...", "...X...X.XX..X..X....X.X.X", "X.X.X.X...X.X..X.X.X...X..", "XX...X.XXXX..X....X..X..X.", "...X........XX.XXX.XX.XX..", "XX.X.X.X.X.XX.........XXX.", "...XX...X....X.X.X.XX..XX.", ".XX...X.XX.X.X..XX..XX.X..", "X...X..X....X..XX..X....X.", "XX.XXX..X.X.XX..XX..XX.XX."}));
    ExampleRunner.eq(78, 21, new MazeWanderingEasy().decisions(new String[]{"X.XXXX.XX....X.XX...X.XXXXXXXXX", "X.XXX...XXX.X..XXX.XX..XXXXXXXX", "...X.XX..X...X..XX.X..XXXXXXXXX", "X.X..X..X.X.X..X.....XX.XXXXXXX", "...X..X.X....X.X.X.X.X..XXXXXXX", ".X..X....X.X.....XX....XXXXXXXX", "..X..XX.X.X..XX.X..XX.XXXXXXXXX", ".XXX.X.....X.X.X*.X.XX.XXXXXXXX", "X..X..X.X.X.....X....X..XXXXXXX", "..X.X....X..XXXX..XXX..XXXXXXXX", "X....XXX..X.....X...X.XXXXXXXXX", "..XX.....X.X.X.X..X.X..XXXXXXXX", "XX.X.X.X...X.XX.X..X..X..XXXXXX", ".M...XXXX.X.....X.X.X...XXXXXXX", "X.XXX..X...X.X.X..X..X.XXXXXXXX", ".XX...X.XX..X..X.X.X....XXXXXXX", "....X......X..X......XXX.XXXXXX", "X.X.XX.XXX..X.X.XX.XX.....XXXXX", "X..X..X....XX.....X...X.X..XXXX", "..X.X...XX....X.XX..X.X..XX.XXX", ".X..X.X.X.X.XX...X.X.X.XX...XXX", "XX.X...X....X..X........XX.X.XX", ".....XX..X.X.XX..XX.X.X......XX", "X.X.XX..X.XX....X..XXXXX.XXXX.X", "XX..X.XX....XXX...X.X.X........", ".XXXX...XXX.....X......XX.XX.XX", "......XX....X.X..XX.XX...XX.XXX", "X.X.X....X.X...X...X...X.....X.", "XX...X.X..X..X.XXXX.XX.X.X.X...", "XXXX..X..XXX.X......X.X...X..XX", "XXX..XXX..X..XX.X.X....XX..X..X", "X.XX..XX.X..X...X..X.X.XX.X..XX", "...XXXX..X.X..X..X..XXX...XXXXX", "XX...X..XX.XX..X..X.XX..X..XXXX", "XX.XX..XXXXX.X.X.X...X.XXXXXXXX", "X.....X.XXX..X.X..X.XXXXXXXXXXX", "..X.X......X...X.X..XXXXXXXXXXX"}));
    ExampleRunner.eq(79, 7, new MazeWanderingEasy().decisions(new String[]{"XXXX......X.X...X...X.XXX..X.X..XX.XXXXXXXXXXXXX", "XXXX.X.XX.X..X.X.XX.X..X..X....X......XXXXXXXXXX", "XXXXXXX...X.X..X..X...X.X...XXX.X.XX.XXXXXXXXXXX", "X...XX.XX....X..X..X.X..X.XX........XXXXXXXXXXXX", "X.X....X.XX.XX.X..X...X.X....X.X.X.XXXXXXXXXXXXX", "XX.XX.X..XX.X....X..X.....X.X...X....XXXXXXXXXXX", "...X....X...XX.X.XXX..XX.X.X.X.X.X.XXXXXXXXXXXXX", "XX...X.X.XX...X.....X.X.X..X..X...XXX.XXXXXXXXXX", "...X.X....X.X..X.X.X.....X..X...X..X...XXXXXXXXX", "X.X.X.XX.X.X.X....X..XXXX..X.XX..X.X.X.XXXXXXXXX", ".X............XXX..X.....X......X.X..XX..XXXXXXX", "..X.X.X.XX.XX.....X.X.X.X..XX.X...X.X.X.X.XXXXXX", "X..X.X.X..X.X.X.X...X.XX.X.MXX.XXX..X.....XXXXXX", "X.X.....X.....XXXX.X.....X.X.X....X...XX.XXXXXXX", "...XX.X.XX.XXX..X...X.X.X..X..X.X.X.XX..X.XXXXXX", "X.X.XX....XX...X.XX..X..X.X.X....XX.X.X.....XXXX", ".......XX....X......X..X......XXX.......XX.XXXXX", "X.X.X.X..X.X.XX.XXX..X.X.XX.XX....X.X.X...XXXXXX", "...X...X.X.XX..X....XX.....X...X.X..X.X.X....XXX", ".X..XXX......X...XX....X.XX..X.X..XX.XX..X.XXXXX", ".X.X...X.XXX.X.X.X.X.XX...X.X.X.XX.....X.X.XXXXX", "XX.XX.X.X...X...X....X..X........X.XX.XX.XXXXXXX", "..XX.....XX...XX..X.X.XX..XX.X.X...XXX.....XXXXX", ".XX.XX.XX.XX.XX..X.XX....X..XXXXX.X.X.XXX.XXXXXX", ".X.........XX..XX....XXX.*.X.X.X.......X.XXXXXXX", "...X.X.X.X...X...XXX.....X......XX.X.X...XXXXXXX", "X.X...XXX.XX...XX....X.X..XX.XX.X.X.X.XX.XXXXXXX", ".X..X.XX...X.X....X.X...X...XX........XX...XXXXX", "...XXX..X.X...X.X..X..X.XXXX..XXX.X.X...XX.XXXXX", ".X..XXX.....XXXX..X.X.X......XX.XX.X.XX..XXXXXXX", "X..X....X.X.X.X.X.X.X.XX.X.X..........XX..XXXXXX", "..XXXX.X...X....X....X...X..X.XX.XXXXXXXXXXXXXXX", "X..XX.X.XXX.X.XX..X.X..X..X.X...X..X.XXXXXXXXXXX", "X.XXX.......X.X..XXX..XXX..XX.XX.X....XXXXXXXXXX", "XXX..X.X.XX.....X.XXX..XX.X........XXXXXXXXXXXXX", "XX.X.XX.X.XXXXX....X..X....XX.XXXX.....XXXXXXXXX", "XX..............X.X..X..X.X.......X.X.XXXXXXXXXX"}));
    ExampleRunner.eq(80, 17, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXXXXXXXXXXXXXX.X..X..XXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXX...X..XXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXX.X...X.XXXXX.XXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXX.XX....XXX..X.X.XXXXXXXXXXX", "XXXXXXXXXXXXX.X.X..X..X..XXX.X.X.X...XXXXXXXXXXX", "XXXXXXXXXXXXX.X.XX..X..X...X.X...X.XXXXXXXXXXXXX", "XXXXXXXXXXXXX.X...X.XX...XX..X.XX...X..XXXXXXXXX", "XXXXXXXXX.X...XX.X....XX..XX....X.XX..XXXXXXXXXX", "XXXXXXXX..X.X.....X.XX...X...X.X....X...XXXXXXXX", "XXXXXX..X.X..XXX.X..X.X.X..XXX..X.XXX.XXXXXXXXXX", "XXXXXXX....XX..X.X.X....X.X..XXXX.X.....XXXXXXXX", "XXXXXXXXXX...X......X.XX...X..XX...X.X.XXXXXXXXX", "XXXXXX.X.X.X...X.XX...X.X.X..X.X.XX..X.X.XXXXXXX", "XXXX...X..X.X.X.XX.X.X..X..X...X....X.X...XXXXXX", "XXXXXX...X...X.......X.XXX.X.XX..X.X...X.X.XXXXX", "XXXXXX.X.X.X...XX.XX.X..XX.X..XX.XX..XXX...XXXXX", "XXXXX.XX..XXX.X...XX...X....X..X....X....XXXXXXX", "XXXX....X..XXX.X.X..XX..XX.X..X..XX.X.X.X.XXXXXX", "XXXXXXX...X.X..XXXX..XX.X...X.XX..XX...X....XXXX", "XXXX....X.....X..X.X....XX.X.....X.XX.X*X.XXXXXX", "XXXX.X.X.XXXX...X..XX.X......X.X..........XX.XXX", "XXXXXXX.......X.XX.....X.XX.X.X..XX.X.X.X..X.XXX", "XXXXXX..XX.X.X.....X.XX...X....X.X...X...X....XX", "XXXX...X...X.XX.XXX.XX.X.X..X.XX..XX.XXX..X.XXXX", "XXXX.X.XX.XX.X.X...M......X.X.X..XX....X.X...XXX", "XXXXXXX.XXX.XX..XX.XX.X.X.X..X..X..XX.XXXX.XXXXX", "XXXXXX.........X.X.X...X.X..X.X.X.XX...XXXXXXXXX", "XXXXXXXX.X.X.X.....X.X.X...X..X.....X.X.XXXXXXXX", "XXXXXXXX.X..X..X.X..X..X.X...X..X.X.X....XXXXXXX", "XXXXXXXXX..X..X...X..X..X..X.X.X.XX..X.XXXXXXXXX", "XXXXXXXXXXX..X.X.X..X..X..X..X.....XXXXXXXXXXXXX", "XXXXXXXXXXXXX....XX.XX..XX.X..X.XX.XXXXXXXXXXXXX", "XXXXXXXXXXXX..X.X....X.X.X...X....XXXXXXXXXXXXXX", "XXXXXXXXXXXXX..X..XX.X...XX.XXX.XXXXXXXXXXXXXXXX", "XXXXXXXXXXXX..XXX...X..X..X....XXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXX.XXXX.X..X..XXX.XXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXX.XX....X.X.X.XX.XXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXX.XX.X...XX.XXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXX..XXX.XXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"}));
    ExampleRunner.eq(81, 23, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXXXXX.....XX..X..X..X.XX...X.X.X.X..XXXXXX", "XXXXXXXXXX.X.XX....X.X..X....XXX...X.....XX.XXXX", "XXXXXXXXXX..X..X.X.....X..XXXX..XX.X.XX.XXX.XXXX", "XXXXXXX.X.X.X.X.XXX.XX..X.....X.X..X...X.X..XXXX", "XXXXX.....X.X.X..X.X...X..X.XXX..X...X.X...XXXXX", "XXXX..X.X.....X.X....X...X.X....X..XX.X..XX..XXX", "XXXXXX..X.X.X.X.X.X.X.XX....X.X..X.XX..X....XXXX", "XXXX.XXXXX.X.....X.X..X..XXX.X.X.X....X..X.XXXXX", "XXXX.X..X..X.XX.XX..X..X...X.X...X.XXX..XX.XXXXX", "X.....X...X.X.X...X.XX...XX..X.XX....XX..XX.XXXX", "XX.X.X.XX.X...XX.X....XX..XX....X.XXX.X.X.X.XXXX", "XXX....X..X.X.....X.XX...X...X.X....X...X....XXX", "X..XX.X.X.X..XXX.X..X.X.X..XX..XX.XXX.XX..X.XXXX", "XX.........XX..X.X.X....X.X..XX.X.X......X.XXXXX", ".X.XX.X.XX...X......X.XX...X..X....X.X.XX...X..X", "...X.X.X.X.X...X.XX...X.X.X..X.X.XX..X.X..XX..X.", ".X.X...X..X.X.X.XX.X.X..X..X...X....X.X..X...X..", "X..X.X...X...X.......X.XXX.X.XX..X.X...X.X.XX.X.", ".XX.XX.X.X.X...XX.XX.X..XX.X..XX.XX..XXX....X.X.", "....X.XX..XXX.X...XX...X....X..X....X....XX.....", ".XX..*..X..XXX.X.X..XX..XX.X..X..XX.X.X.X.X.XX.X", "..XX.XX...X.X..XXXX..XX.X...X.XX..XX...X...X..XX", ".X..X...X.....X..X.X....XX.X.....X.XX.X.X.X..X.X", "XXX..X.X.XXXX...X..XX.X......X.X..........XX....", ".X.X..X.......X.XX.....X.XX.X.X..XX.X.X.X..X.XX.", "...X.X..XX.X.X.....X.XX...X....X.X...X...X....X.", "XX.....X...X..X.XXX.XX.X.X..X.XX..XX.XXX..X.X.X.", "...X.X.XX.XX.X.X..........X.X.X..XX....X.X...X.X", ".X..XXX.XXX.XX..XX.XX.X.X.X..X..X..XX.X.X..X....", "X..XXX.........X.X.X...X.X..X.X.X.XX....X.X..X.X", "XX..X.XX.X.X.X.....X.X.X...X..X.....X.X.X..XX...", "X..X...X.X..X..X.X..X..X.X...X..X.X.XXX.X.XXXX.X", "XX.XX.XX.X.X..X...X..X..X..X.X.X.XX....XX...X...", "XXX.......X..X.X.X..X..X..X..X.....X.X...X.XXXXX", "XXX.X.XX.X..X....XX.XX..XX.XM.X.X.XX..X.XXXXXXXX", "XX..XX....XX..X.X....X.X.X...X...X...X..XXXXXXXX", "XXX.XXX.X.X.X..X..XX.X...XX.X.X.X.XX..XX.XXXXXXX", "XXXXXX..X....X..X...X..X..X...X.....X.......XXXX", "XXXXXXX..X.XXX.X.X.X..X..X.X.X.X.XX.X.XX.XXXXXXX", "XXXXXX..X..XX.XX....X.X.X..X...X..X..XXX.XXXXXXX", "XXXXXXXXX.X......X.X..X..X...X..X..XXXXXXXXXXXXX", "XXXXXXXXXXX.X.X.X...X..X.X.X.X.XXX.XXXXXXXXXXXXX", "XXXXXXXXXXXX..XXX.X.X.X.X..XX..XX.XXXXXXXXXXXXXX", "XXXXXXXXXXXXXX....X.X....X...X.....XXXXXXXXXXXXX", "XXXXXXXXXXXXXXXX.X..X.XX..X.X.XX.X.XXXXXXXXXXXXX", "XXXXXXXXXXXXXX....X.X.X..X.....X.XXXXXXXXXXXXXXX"}));
    ExampleRunner.eq(82, 37, new MazeWanderingEasy().decisions(new String[]{".X..XXXX.X.XXX...X..XX.X..X.........XXXX.XXXXXXXXX", "..X..XXX.X.XXXXX..X......X.XX.X.XXXXXXXX.XX.XXXXXX", ".X..XX.....XXXXX.X.X.XX.XX..X..XX..XXXXX..X.XXXXXX", ".X.X.XXXXX..XXX..X..X...X..X..X.XX..XXX..XX.*XXXXX", "......XXX..X.X..XXX..X.X..X.X.....X..X.X..X.X.XXXX", "X.X.X..X.X.X..X..X.X.X...X..X.XX.X..X..X.X....XXXX", ".X...X.X.....X.X......XX...X....XXX...X..X.XXXXXXX", "..X.X.X.X.XX.X...X.XX....XXXX.X.XX..XXXX.....XXXXX", "X...X.X..X....XX..X..X.X...X...X...X..X..X.X.XXXXX", "XXX....X..XX.X.X.X.X..X..XX..X..XX..X...X...X.XXXX", "X.X.X.X.X.X..X..X....X..XX..XXX....X..X..XX...XXXX", ".....X....XX..X.XX.X..X.X.X.XXX.XX..XX..X.XXXXXXXX", "X.X.XXXX.X...XX...X.X...X....X.X...X..X......X..XX", ".X...X.X..XX.X..XX...X.X.X.XX..X.X..X...X.X.XXX..X", "..XX.X..X.....X...XX..........X.X..X.X.X.XXX.X..XX", ".X.....XXXXX.X.X.XX.XX.X.X.XXX...XX.......XX...X.X", "...X.X..X..X.X.X.X....X..XX....X...X.XX.XX...X....", ".X..XXX..X........XX.X.X..X.X.X.X.XX...XX.X.X.X.XX", "..XX.X.X...X.X.XX....X...X..XX...X...X.........XX.", "XX.X...X.X.X.X.X.X.X...XX..X.XX.X.XX..X.XX.X.X....", "....XX....X...X..XX.XX...X...........X.X..XX.XXX.X", "XXX....XX.X.X.XX......X.XX.X.X.X.X.XX..X.XM.X...X.", "....X.X...X..X.XX.X.X.......X...X.X..X.X.XX.XX.XX.", "X.XX.X..X..XX...X.X.XX.XX.X.X.X....X...X..........", "XX.....X..X..X.X.X.X.XX...XX.X.XXXX.X.XX.XX.X.XX.X", "X.XX.XX..X.X.X.........XX..................X.X.XX.", "......X.X.....XX.X.X.X....X.X.X.X.X.X.X.X.XX......", "X.X.X..X.XX.X..XX..X..X.X..XX..XXX.X...XX....X.XX.", "..XX.XX....X.X...XX..X.XX.XX.XXXX..XX.XX.X.X..XX.X", ".X......XX.....X....X.....X..X.X..X......X..XX....", "XX.XXX.X.X.X.XX..XXX.XXX.X.X.....X..X.XX..X....X.X", "....X..X..X.X...X............XX.X.X..X...X..XX.X..", ".X.X..XXX.....X..XXXX.X.X.XX.X.X..X.X..X..XXX.XXX.", "X...XX.X..X.X.X.X.....X.XX...X.XX.X..X..X.....X...", "XXXX.....XX.X.XX..X.X.X..X.X.......XX..X..X.X.XXX.", "X.X.X.X.X....X..X..X...X..X.X.XX.X...XX.X..X...XXX", "X.....XXXX.XX.X...XX.XXX.XX.....X.X.X...X.X.XX.XXX", "..XX.X.....X....X...X....X.X.X.XX.XX..X.X.....XXXX", "XX.X..X.XX..XX.X.X.XX.XX...X.X.......X.XX.X.X..XXX", "XX.XXX.XX..X.X.X..XX..X..X.X..XX.X.X.....X.X..XXXX", "XX........X......X..XX.X..XXX...X...X.XX.X..X.XXXX", ".X.X.X.X.X..XX.X..X......X.X..X..X.XX..X...XX.XXXX", "....X.XX.XXX....XX.XXXX.XX...X.X.X...XXX.X..XXXXXX", "X.XX.......XX.XX..........XX....X.X.XX..X.XX.XXXXX", "X.XXX.XX.XX..XXX.XX.XX.X.X..X.XXX.XXX..XX.....XXXX", "XXXX...XXXXX..X.XX.X...X..X.XX.......X..XX.X.XXXXX", "XXXXXX.X.XX.X........X..X......XX.X.XX.X.XX...XXXX", "XXXXX.X.......X.X.X.X..XXX.XXX...X..........XXXXXX", "XXXX....XX.X.X.X..XX..X.XX....XX..XX.XX.X.X...X.XX", "XXXXXX.X...X....X...X.....X.X..X.X....X.X..XX....X"}));
    ExampleRunner.eq(83, 27, new MazeWanderingEasy().decisions(new String[]{"MX......X.XX....X.X...X...X....XXXXX....X.X...X.XX", "...X.X.X....XXX.X...XX..XX.XXX..XXX..XX....XX...XX", "XX.X..X.X.XXX....XX..X.X...X...X.X..X..XX.X...XXXX", "..XX.X....X..XX.X.XX...X.XX.XX....X..X.X.X..X.X..X", ".X....X.X...XX..X..X.XX.....X..X.XX.X.....X.X...X.", "..X.X..X..X.X.X.X.X..X..X.XX..X.X....X.XXX...X.XX.", "X.XX.X.XX..X.......X..X.X.X..X....X.X......XX.X...", "...X.....X.X.XX.X.X.X.X..X..X..X.X.X..X.XX......X.", ".X..XX.X.X..X....XX....X...X..X.XX.XX..X..X.XXX.X.", "XXX...XX...X.X.X.X.XX.X.XX..X.......X.XX.X.XX..X.X", ".X..X...XX.X....X..X.....X.XXX.XX.X.X......X..X..X", "..XX..X....XX.X...XXX.X.X...XX.XXX.X*.X.X.XXX...X.", "X....XX.XX..XX.XX..X...X.XX.....XX.XX..X.X.X..X.X.", "..X.X...X.X......X.XX.X...X.XXX.......X....X.XXX..", "X.XX.X.X....X.XX......X.XX.....X.X.XX...X.X...XXX.", ".X.....X.XX.XX...X.XX.X.X.X.X.X...X..XX..X..XX.X..", "...X.X..X.X..X.XX.X.....X....X..X.X.X..X.XX.XX.X.X", "X.X...XX....XXXXX..XXXX.X.XX..X..X....XX..X.......", ".X.XXXX..X.XXX.X.X.X.......XXX.XX..X.X..XXX.X.XXX.", ".X......X..XX....X.XX.X.X.X......X..XX.X....X.X..X", "..XXXX.XXXX..XXX.....XXXX...X.XXX..X....X.X..X.X.X", "X.X.....X..X....XXX.X.X...X..XX.XX.X.X.X.X..X.....", "X.X.XX.X..X..XX........X.X.X..........X..XX...XXX.", "...XX.X.X...X..XXXXX.XX....X.XX.XX.XXX..X...X....X", ".X........XXX.X.......X.X.XX.X...X.....X.X.X.XXXXX", "..X.X.XX.X.....X.X.XX.XX....X.XX.X.X.X...X...X...X", ".XX.X.X..XX.XX....X.X...X.X.....X...X..X...X..X.X.", "X..X.X..X.XX.X.XXX....X....X.X.X.XXX.X..X.X.X.....", ".X....XXX.....X....X.XX.X.X.XX........XX.X..X.X.XX", "..XXX.....XX.X..X.X.X...X.....X.X.X.XX.X...X.X..X.", "X.X..X.XXX.X...XXX..X.X..X.X.X...XX......X....X...", "X.XX...X.....X.XXXX...X.XX..X.XX.X.XX.X.XX.X.X..XX", ".....X.XX.X.X...XX.X.X.X...X..X.X...X.X...X.XX.XXX", ".X.X.XX...X.XX.X....X....X...X....X.X.XX.X....XXX.", ".X..X...X..X....XX.X..X.X..X...XX.XX....X..XXX.X..", "..X.X.X.X.X.X.XX.....X..XX..X.X....XX.X..X.X.....X", ".X.X..X..X..XX.XXXXX.X.X...X..XX.X...X.X.....X.X..", "X...X..XX.X..........X.X.X..X...XX.X....X.X.X.X.X.", ".XX..XX....XXXX.XX.X.X.X..X..X.X....X.X.X..XX.X..X", "....X..XX.XX..X.X..X.X..X..X.X..XX.XX.XX.XX.X...X.", "X.X..X.X....X....X..XXX..X.X.X.X...X.X.......X.XX.", "...XX....XX...XXX..XXXX.XXX..X.X.X.....X.XXX...X..", ".X....XX.X..X.X...X.XX..XX..X..X..XX.X..XX.X.X...X", ".X.X.X...X.X.X..X.....XX...X..X..X.X..X.X.....XX..", "X...X..X.X.X..X..X.XX.X..X..X..X.X..XX...X.XXXXX.X", "..X..X..X..XX...X...X..X.X.X.X.X..X.X.X.XX....X..X", ".X..X..X.X..X.X..X.X..X.X....X.XX......X..X.X..X..", ".X.X..X....X...X.X.XXX....X.X....X.XX.X.X.X..XX..X", "X.XX.X.XX.X.X.X..X...XXXX.XX..X.XX..X......X..X.X.", ".........X.....X.X.XX.......XX..X..XXX.X.X.X.X...."}));
    ExampleRunner.eq(84, 22, new MazeWanderingEasy().decisions(new String[]{"...X..X.X.X.....X..X.X.X.X..X..X..X.X.X..X.X.XX..X", ".XX..X..X.X.X.X..X.X...X..X..X...X.....X.......X..", "....X.X.X..X..X.XX...XX..X..X..XX..XX.X.XX.XX.XXX.", "X.XX.....X..X..XX.XX...X...X.X..X.X..X..X....X.X..", "X.X..XX.X.X..X....XXX.X..XX...X.....X.X...XX.X..X.", "...XX.......XXXXX..X....X..X.X..XXXX...XX.X.XX.X..", "XX...XX.X.X.XX....X..XXX..X..XX.....X.X...X......X", "..XX.X.X.X....X.X..X...X.X..X..X.X.XX..XX...X.XX..", ".X.X.X...X.X.XXX.X..XX...X.X.X....X...X...X.X...X.", "......XX..X...X...X.X..X.X.X...XXX.X.X..X..X.X.X.X", "X.X.X.X.X.XX.X.X.XX.X.X..X.X.X.........X.XXX..XX..", "..XX...........X.X....X.X...X.X.XX.X.XX..X...X..X.", ".X...XXXX.XXXX...X.XX..X..XX..X.X.X..X..X..X...X..", "X..XX...X.X...XX..X..X.XX...X......XXXX...X.XX...X", ".XX..XX.XXXXX...X.X.X...X.X..X.XX.X..X..X.X...XX..", ".X.X.X....X..X.XX.X.XX.X...XX..X.XX.X..XX.X.X..XX.", "......XX.X..X...........X.X...X..X..X.X..X...X...X", ".X.XX..X.XX..XX.XX.XXX.XX..X.X..XXX....X...XX.XXX.", "XX.X..X.....X..X..X.......X..X.X.X..X.X.XX.X....X.", "..X..X.XXX.X.X.XX..XX.X.X..X.X...X.XXX.......XX.X.", ".X.X.....X.X.X..XX..X..X..X..X.XX...X.X.XXX.X..X..", ".....X.X.......X..X..XX.X...X.....X.......X..X..X.", "X.X.XX..X.X.XX..X.X.X.....X...X.X.XX.XXX.X.XX.X...", ".X.X...XXX.X..X......X.X.X..X..XX...X...X...X...X.", "....X.X.X...X...X.XX..X.X..X.X...XX...XX..XX..X.XX", "X.X...X..XX..XX.X.X.X.....XX...X.X..XX.X.X.X.X.X..", ".XXXXX.X.X.X.X.X..X.XX.X.X..X.X.XXX..............X", "..X..............X.....X..X..X...X.X.X.X.X.X.XXX.X", ".XX.X.XXXX.X.X.XX.X.XX..X...XX.XXX.XX.X.XX..XX.X..", ".X.X.XX.....X...X...XX.XX.X...............X....X.X", ".X.....XX.X.XX.X..XX...X.X..X.X.X.XX.X.X.X.X.X..X.", "...X.X..X..X...X.XXXX.X..X.XX..X.XX.X.X.X..X..X...", ".XX..XX...X..X.X..XX...X.....X............X.X..X.X", "X...X.XXX..X..X..X...X.XX.XX..XX.XXX.X.X.X...XX.X.", ".X.X......XXX..X..X.X.X...X..XX....X..X.XXX.X.X...", "..X..X.XX..X..X.X..X....X..X...X.X..X....XX.....X.", "X...XXX...X.X.X.X.X..X.X.X.X.X..X..X.X.X....X.X..X", "XX.X.X.X.XX.....XX.X.X.X.X.XXXX..X....X..X.XX..X..", "X.X........XX*XX.X...X...X...XX.X.X.XX.XX....X.X.X", "....X.X.X.X..XX....X.X.X.X.XX.....X......X.X.XX.X.", ".XX..X..X..X....XX.X.X.X..X.X.X.XX..XX.X.X.X......", "XX.X..XX..X..XX.X...X..XX.M..X..X.X..X.X..X..X.X.X", ".....X.XX.XXX..X.X.X.X...X.X..XX....X...XX.XXX..X.", ".X.X.X.......X........X.XX..X.X..X.X..X.......X...", "X.XX..X.X.X.X.X.XX.X.X....XX..XX.X.XX.X.X.XX.X..X.", ".....X.X..X.X...X...X.XX.X..XX...X...X..X.X.X.X.XX", "XXXXX....X..X.X.X.X....X.XX.X..X.X.X..XX....X.....", "....XXXX..X..XX..X..X.X......XX.X...X...X.X..XXX.X", ".XX......XXX.X..X.X.X..X.X.X.....X.X..X..X.X....X.", "..X.X.XX..X..X.X....X.X...X..X.XX...X..X....X.X..."}));
    ExampleRunner.eq(85, 35, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXXXXXXXXXXXXXXXX.XX..XXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXX...X.X...XXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXX.X...XXX..XXX.XXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXX.XXXX..X.XXX.X...X.X.XXXXXXXXXXX", "XXXXXXXXXXXXXXXXXX.XXXXX....XX...XX....XXXXXXXXXXX", "XXXXXXXXXXXXXXXXXX.X..X..XX...XX....XX..XXXXXXXXXX", "XXXXXXXXXXXXXXXXXX..X..XX...X.X..XXX..X.XXXXXXXXXX", "XXXXXXXXXXX...XXX..X.X...XX..X.X..X..X.X.X...XXXXX", "XXXXXXXXXXXXX..XXX.X..XX.X..X..X.X.X...X..X.X.XXXX", "XXXXXXXX...X..X..X.XX.X..XX..X.....X.XX..XX...XXXX", "XXXXXXXX.X.XX.XX.X..X..X..X.X..X.X.X.X.X....XX.XXX", "XXX.XXX.X......X..X...XXX...X.X...X......XX..X.XXX", "XXX.XX....X.XX..X..X.X.X..X....X.X..X.X.X..X...XXX", "XXX.X.X.XX.X..X...X....X.X..XXX.X.X..XXX..X.XXXXXX", "XXX...XXXX.X.X..X..X.XX.X.X...X...XX..X..X..X.X.XX", "X..X.X..X.....X..X....X....X.X..XX...X..X.X.X.X.XX", "X.X....X.XXX.X..X..X.XX.X.X...X.XXXX...XX.X.....XX", "....X.XX.X....XXXXX..X.X..XX.X...X...X......X.XX..", "X.X..XX..X.X.X..X..X....X..X.X.X..X.X.XXXXXX.XXX.X", "...X...X..X....X.X...XX..X...XX..X..X.........X...", "X.X..X.X.X..XXX....XX..X..XX...X..X...XXX.XXXX..X.", ".X.XX..X..X....XX.X..X..X.X..X.X.X..X.X..X...X.X.X", "......X.X.X.X.X.X.X.X..X..X.X..X..X..X..X.XX......", "X.X.X........X...X..XX...X...XX.X.X.XX.XX....XXX.X", "XX.X.XXXXXX.X.X.X.X...XX..X.X.............X.X...XX", "..............X.....X.X.X.....X.X.X.XX.X.XX...X..X", ".XX.XX.XX.X.X...X.XX......X.XX.X.X.X..X..X..XX.X..", "X..X.X.X..XXX.X.XX.X.X.X.XX..........X.XX..X....X.", ".X.X..X..X...X.X......X....X.X.X.X.X.....X.X.X.X.X", ".....X..XXXX....X.XX.X..XX.X.X..X..X.XXX..XXX..X..", ".X.X..XX.X.XX.X...X.X..X..X..X.X.X.XX...XX.X.X.X.X", "X.X.X.XX......XX.XX...X.X..X.X...X....X...........", ".........XX.X..X.X.XX.....X...X.X..X.X.X.X.XX.X.X.", "X.XXX.X.X..X.X.X.X....X.X.X.X..X.X..X.....X....XX.", ".X....X..X......X..X.XX.XX...X...X.X.XXX.XX.X.X...", "...X.X..X.XX.X.X..X..X...X.X.X.XX......X.X.XX.X.X.", ".X..X..XX.X.X...XXXX.X.X..X.X...X.XXX.X......X..X.", ".X.X.XX.......X.X.X...X..X...X.X.X...X..X.X.XX.X..", ".XX.....X.X.X..X....X..X.XX.X......X..X.X.X.X.X..X", "X.X.XX.X..X.X.X..X.X.X.X.....X.XX.XX.X...XX....X.X", ".....X.XX.XX...X.X.X...XX.XX.X.X....XXX.X...X.XX..", "XXX.X.X.....X.X..X.X.XX....X.X..X.X.XXX.XXX..XXXX.", "XXXX....X.X..XXX.X..X..X.X.X.X.X...X.X..XXX.XXXXXX", "X.X..X.XX..XX.X...X...XX.X..XX.X.X...XX.XXX...XXXX", "X...XXX...XX....X.XX.XX..XXX....X..XX.XX.X..XXXXXX", "XXX.XX..X...XXX.X.X..X.X...X.X.XXX.......XX..XXXXX", "XX*.X..X..X..X...X..X....X..XX...X.X.X.XXXX.XXXXXX", "XXX.X.XXX.X.X..X.MX.X.XX.X.X...XXXXX.X.XXXXXXXXXXX", "XXXXXXX...X..X..XX.X...X.X..XX.X.XXXXXXXXXXXXXXXXX", "XXXXXXXX.XX.X..XXX...X.X.X.XXX...XXXXXXXXXXXXXXXXX"}));
    ExampleRunner.eq(86, 8, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXX..XXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXX..XXX.XXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXX..XXX..XXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXX..X.X..XXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXX..X..X.X.X.XXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXX.XX..X.....X.XXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXX.X.XX..X.X..X.XXX.X.X.XXXXXXXXX", "XXXXXXXXXXXXX..XXXX...XXX...X.XXXXX......XXXXXXXXX", "XXXXXXXXXXXXXX..XXXX.X.X..X....XXX..X.X.XXXXXXXXXX", "XXXXXXXXXXXXXXX...X....XXX..XXX.X.X..XXXXXXXXXXXXX", "XXXXXXXXXXXXXXX.X..X.XX.X.X...X...XX..X..XXXXXXXXX", "XXXXXXXXXXXX.XX.XX....X....X.X..XX...X..X.X.XXXXXX", "XXX.XXXXXXXX.X..X..X.XX.X.X...X.XXXX...XX.X.XXXXXX", "XX..XXXXXXX...XXXXX..X.X..XX.X...X...X......XXXXXX", "XXX..XXX.XXX.XXXX..X....X..X.X.X..X.X.XXXXXX.XXXXX", "XXXX...X..X....X.X...XX..X...XX..X..X.........XXXX", "XXXX.X.X.X..XXX....XX..X..XX...X..X...XXX.XXXX..XX", "XX.XX..X..X....XX.X..X..X.X..X.X.X..X.X..X...X.XXX", "X.....X.X.X.X.X.X.X.X..X..X.X..X..X..X..X.XX......", "XXX.X........X...X..XX...X...XX.X.X.XX.XX....XXX.X", "XXXXXXXXXXX.X.X.X.X...XX..X.X.............X.X...XX", "XXX...........X.....X.X.X.....X.X.X.XX.X.XX...X..X", "XXX.XX.XX.X.X...X.XX......X.XX.X.X.X..X..X..XXXX..", "XXXX.X.X..XXX.X.XX.X.X.X.XX..........X.XX..XX...X.", "XXXX..X..XM..X.X......X....X.X.X.X.X.....XXXXX.X.X", "XX...X..XXXX....X.XX.X..XX.X.X..X..X.XXX..XXX..X..", "XXXX..XX.X.XX.X...X.X..X..X..X.X.X.XX...XX.X.X.X.X", "XXX.X.XX......XX.XX...X.X..X.X...X....X...........", "X........XX.X..X.X.XX.....X...X.X..X.X.X.X.XX.X.X.", "XXXXX.X.XX.X.X.X.X....X.X.X.X..X.X..X.....X....XX.", ".X....X..X......X..X.XX.XX...X...X.X.XXX.XX.X.X...", "...X.XX.X.XX.X.X..X..X...X.X.X.XX......X.X.XXXXXX.", ".XXXXXXXX.XXX...XXXX.X.X..X.X...X.XXX.X......XXXX.", "XXXXXXX.......X.X.X...X..X..XX.X.X...X..X.X.XXXXXX", "XXX..*..X.X.X..X....X..X.XX.X......X..X.X.XXXXXXXX", "XXXXXX.X..X.X.X..X.X.X.X.....X.XX.XX.XXXXXXXXXXXXX", "XXXXXXXXX.XX...X.X.X...XX.XX.X.X....XXXXXXXXXXXXXX", "XXXXXXX....XX.X..X.X.XX....X.X.XX.XXXXXXXXXXXXXXXX", "XXXXXX..X.XXXXXX.X..XXXX.X.X.X.X...XXXXXXXXXXXXXXX", "XXXXXXXXX..XXXX...X..XXX.X..XX.XXX..XXXXXXXXXXXXXX", "XXXXXXX...XXXX..XXXX.XX..XXX....X..XXXXXXXXXXXXXXX", "XXXXXXXXX...XXX.XXXX.X.X...XXX.XXX..XXXXXXXXXXXXXX", "XXXXXXXXX.X.XX..XXXXX....X..XXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXX.X.XXXXXXXXXXXX.X.XXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"}));
    ExampleRunner.eq(87, 28, new MazeWanderingEasy().decisions(new String[]{".XX.X..X....XX..X..X..XX.....X..X..X.X........X...", ".X..X.X.X.X...X.XX..X...X.X.XX.XX.XX..X.X.X.XX.X.X", "...XX...XX.X.X....X.XX.X..X....X.....X..X.X.X.....", "XX....XX.....X.XX....X.X.X..XX.X.X.X..X..X...XX.X.", "X.X.X...XXXX..X..XXX.X..X.X.X.X..X..X..X..X.X..X..", "..X..XXXX....X.X...X..X*.......XX.X..XX..X.X..X..X", "X...XX..XX.X.X.X.X...X.X.X.XXXX...X.X...X....X.X..", "..X.X..X..X....XX..X...XX......XX....XX..X.X...X.X", ".XX.XX..X..X.X..XXX.XX...XX.X.X...XX..XX....X.X...", "XX.....XXX.X.X.X..X..X.X..X..X.XX.X.XX...XX..X.X.X", "X.XXXX..X..XX...X..X..X..X.X....X.....XX...XX..X..", "X......XXX....XX.X.XX..X.....XX...XX.XX.X.XX..XXX.", ".X.X.X..X..XX.X......X..X.XX..XX.X...X..X....X.X..", "..XX..X..X.X...XX.X.X.X..X.X.X..X.X.X.X...X.X....X", "X.X..X..X.X..XX..X.....X.....X.X...X....XXX..X.X.X", "...XX.X.X..X.X..X..X.X..X.XX.X...XX..XX....XX...X.", "XX.X......X...X..XX.X..X.X.....X.X.X..XX.X.X..X...", ".....X.X.X.X.X.X.....X....XX.XX.XX..X...X.X..X.X.X", "X.X.X..X.X.X.X.X.X.XX.X.X.........X...X.X.XX....XX", ".XXX..X.....MX..X..X...XXX.X.X.X.X.X.X.X.....XX..X", "..X..X.X.X.X.X.X.X..XX..X.XX..X.X........X.X.XXX..", "X..X.X..X.X....X..X....X.....X...X.XXX.X..X...XX.X", ".X.XX..X....XX..X..X.X...X.X...XXX...X.X.XX.X...X.", ".X...X...X.X...X..XXX..XX..XX.X....XX.XX.X.X..X...", ".X.XX..XX.XX.X..X..XX.XX..X.XX..XX....X.X...X.X.X.", ".....XXX......X...X...X.X......X.XX.X...X.XX.XX.X.", ".X.X.....X.X.X.XX..X.X....X.XX.....X.XXXX......X..", "X.X.X.X.X.X.X.....X.X..X.XX...X.XX.X......XX.X..X.", "....XX.XX.....XXX.....X....X.X...X...XXXXX..X.XX..", "X.X....X.X.X.X..X.X.XX..X.X...XXX..X......X....XX.", "XX.X.X....X..XX....X...X..X.X....X..X.X.X...X.X.X.", "X....XX.X...X...XXX..X..X..X..XX.X.X...X..X.X....X", "..X.X..X..XX.XX....X.X.XXX..X..X.XX.X.X.X..XX.X.XX", "X..X.X...X....X.X.X..X.XX..XX.XX....X.X.X.X....XXX", ".XX...X.XXX.X....X..XXX...X.....X.XX.....X.XX.X.XX", "...XX....X...X.XX..XXX.X.X..X.X.X...X.XX....X....X", ".X....XXX..XX...XX.XX....X.X...X..X..X...X.X.X.XX.", "X..XX.X...XX..X...X...X.X...X.XX.X..XXX.X.XX.X....", ".X..XX..X.X.X..X.X..X..X..X..X..XXX..X........X.XX", ".X.X..X..X....X...X..XX..X..X.X.XX..X.X.X.XXXX.XX.", "....X...X.XXX.X.X..X...X..X.......X....X..........", ".X.X..X.X......XX.X..X.X.XXX.XXX.X..X.XXX.XX.X.XX.", "..X.X.X.X.XX.X...XXX..X..XX.....XX.X...X..X..X.X..", ".X.....X.X...X.X..X..XX.X...XX.X..XX.X.X.X.XX...X.", ".X.XX.X..X.X.X..X.X.XX.X..X...X.X.X..X.X.X...XX.X.", "..X...XX....XX.X.X..X....X..XXX.X..XX..X...XX.X.X.", "XXXX.X.X.XXX...X.X.XXX.XX.X.......X.X.X..X..X...X.", "XXXXX....X...X...X..X..X....X.X.X....X..XXX.X.X.X.", "XXXX..XXX.X.X..X.XXX..X..XX.X..X..XX.XX..XX..XXX..", "XXXXX.X.....X.X.....X..X.X...X..X..X...X.X..XXX..X"}));
    ExampleRunner.eq(88, 32, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXXXXXXXX..X..X.XX.X..X.X.X.XX..X.X.XXXXXXXXX", "XXXXXXXXXXXXXX.XXX......X.X..X.....X.X.X...XXXXXXX", "XXXXXXXXXXX....X..X.XXX....X..XX.X.X.....X.XXX.XXX", "XXXXXXXXXXXXXX...X..X...XX.X.XX...X..X.XXXX..X.XXX", "XXXXXXXXXXXXX..XXXX.XXX...XX...X.X..X.X..XX.XX.XXX", "XXXXXXXXX.X..X..XX.X...XX.X..XX...X.X...X...X...XX", "XXXXXXXX....X..XXX..X.X.X..X...XX.X...X...XX.*XXXX", "XXXXXXXXXX.X.X..X.X.....X.XX.XX.....XX.XXX.X.XX.XX", "XXX.XXX......X.XX.X.X.X...X...X.X.XX.X...........X", "XX..XX.X.X.X...X...X.XXXX...XX.X..XX.X.X.X.X.X.XXX", "X.X....XX.XX.XX.X.XX..X..XX..X..X.......XXX...XXXX", "X...XX............X.X..X.X.X.X.X..X.X.X..X.X.XXXXX", "X.XXXXX.X.XX.X.X.X..X.X..X.X.X...XX.X.X.X...XXXXXX", "XXXXXX.XXX.X..XX..X....X.......XXX.X.X.XX.XXXXXXXX", "XXXX........XXX..X.X.X.X.X.X.XX....X.......X.XXXXX", "XXXXXXXX.X.XX..X...X.X.X..X.....XXX.X.XX.X...XXXXX", "XXXXXX.XXX.X..XXX.XXX..X.X..XX.X..X....XXXX.XXXXXX", "XXX.X...X....X.X...X.X..X.X...X.X.X.XX..XX.X.XXXXX", "..X..X.X.XX.XX.X.XX..X.XX...XX..X.....X......X..X.", "X.XX...X.XX......XXX.....XX.X..XXX.XX.X.X.X.XX.X..", ".....X......XX.X..X.XXX.X...X.X.XX.X.X.XX..XXX...X", ".X.XX.X.XX.XX.X.X.....X..X.X.............XX.X..XXX", "XXX.......X...X..XX.X..X...X.X.XX.X.X.XX..X...XXX.", ".X.XXX.XXX..X..X....XX..X.X...XX.X.X...XX.X.X..XX.", "......X..X.X.X..X.XX..X.X...X.......XXX..X...XX.X.", "X.X.X..X..X...X..X.XX.....XXX.X.X.X...X.X.X.X.....", "...X.X...X.X.XX.X.....X.X....XX..X..X.........XXX.", ".XXX...X.........X.X.X..X.X.X..X..X..XX.X.X.X....X", ".X...X.XX.X.XXXX..X.X..X.X....XX.X..XXX.XX...X.X..", "..XX..X..XXX...X.XX.X.X....X.X....X.XX....X.X.X.X.", "XXX.XX..X.XX.X.........XXX..X.XX.X....X.XX.......X", "XXX..XX.......X.X.X.X.X..XX.....X.X.X.X...XXXX.XXX", ".X.X...X.XX.XXXX..XX....X.X.X.X...X..X.X.X...X.XXX", "...X.XX..X..X.X..X.XXX.X..X..X.XX..X...XX..XXXXXXX", "XX......X..X...X.X.....X.X.X....X.XX.X....XXXXXXXX", "X.X.X.X.XXX..X...XX.XX......XX.X....X..X.XXXXXXXXX", "X....XX....X..X.X...XX.X.XX..X..X.X.XX.X....XXXXXX", "XX.X.X..X.X..X.X..XX...X..XXX..X.X...X..X.XXXXXXXX", ".XX..X.XX.X.X....X..X.X.X....XX...X.XXX.XXXXXXXXXX", "....X..X..XX.XXX...XX.X..X.XX...XX...XX...XXXXXXXX", "XX.X..XX.X.....X.XX....X......XX.XX.X...XX.X.XXXXX", "XXXX.XX..X.XXX.....X.X.XX.X.X.....X.X.X......XXXXX", "XXX..X..X..X...X.XX..X..X.X..XX.X..XXX..X.X.XXXXXX", "XXX.XXXXXXX..X.X...XX.XX..X.X.X..X.XXXXXX.X.XXXXXX", "XXXXXXXXX...XM..X.X......X....X.XXXXXXXXXXXXXXXXXX", "XXXXXX....X.X.X..XXX.X.X..X.XXX.XXXXXXXXXXXXXXXXXX", "XXXXXXX.X.XX..XX...X.X.XX..XXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXX...XX...X.X..X...X.XXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXX.XXXXX..X..X..X.X.XXXXXXXXXXXXXXXXXXXXXXX", "XXXXXXXXXXXXX...X..XX.X..XXXXXXXXXXXXXXXXXXXXXXXXX"}));
    ExampleRunner.eq(89, 46, new MazeWanderingEasy().decisions(new String[]{"..XXX.X.X..X.....X....X....X.X.X.X...XX...X..XX..", ".X......X.X.X.XX...XX...X.X..X...X.XX..X.X..X...X", ".XXX.XX...X..X..XXX...X..X.X..XX.X...X.X.XX.XX.X.", "..XXX.X.XX..X..X..X.XX.X.....XX...X.X..X.....X.X.", ".X.X..X..XX..X..X.XX...X.X.X....X.X...X..X.X.....", "....X..X...X..X....X.XX.X.X..XXX...XX..X.XX.X.XX.", "X.X...X..XX.X..XXX...X....X.X....X.X..X.....XX..X", ".X..X.XX.X...X....X.X..X.X...X.X..X..X.X.XX....X.", "...X.....XX.X.XX.X...XX...XX.X.X.X.X.....X.XXX...", "X.XXX.XX.......X..XX...XX..XX.X......X.X...X.X.X.", "...X..X..X.X.X...X.X.X..X.X.X..X.X.XX.XXX.X..XX.X", "X.X..XXX.X..X.XX.X..X..X..X..X..X...X..X...X.....", "XX.XX.X...XX.....X.X.X..X..X...X..XX..X..X...X.X.", "X..X...X.X...X.X...X.X.XXX..XX..X....XXX.X.X..XXX", "..X.X.X.X.X.X.XXXX.....XXXX.X.X...X.X.X.X.X.XX.X.", "X.........XX...X..X.XX..XX..X..X.X...............", "XX.XX.X.X...X.XX.X.X...X..X..X.X.X.X.X.XX.X.X.X.X", "X.X..XXX..X.X.X......X..X..X.X.X..XXXXX.XX.X.XX..", "...X.XX.X..X..X.X.X.X.X.X.X....X.X.X.X.....X...XX", "XX........X.X....X....X.X..X.XX........X.XX..XX..", ".X.X.X.XX.....X.XXX.XX...X......X.X.XXX...X.X.XX.", ".XX.X.X..X.X.X.X.X.XX.X.XXX.XXXXX.X....X.X.......", ".......X....X..X.X.X.....X.......X..XXX.X..X.XX.X", "X.X.X.XXX.XXXX.X.....XX.X.X.X.X.X.X.......X.X...X", "..X.X..X..X.X...XX.XX........XXX..X.X.X.XXX.XX.X.", ".X.X.X..XX...X.X..X.XX.X.XXX..X..X...X........XX.", "X....X.XX.XX....X......X....X...X.X.X..X.XXX.X...", "..XX.........XX...XX.XX..X.XX.X....XX.X.....X.XX.", "X..XX.XX.X.X.X..X..X.X.X.X.X..XX.X.X.XXX.XX......", "..X..X....XX.X.X..X.X.....X.X..XX.X...X..XX.XX.XX", "X.XX..X.XX...X..XX....XX.XX..X....X.X.XX...XX....", "XX..X.....XX.X.X..X.X.X.....X.X.X....X.XXX...XX.X", "X.X...XXXX....XX.X.XX.X.X.X...X.X.XX......X.X....", "...X*X....XX.X.........X...XXX...XX..XX.X.X..X.X.", "X.XX..X.X...X.XXX.X.X.X..X.X...X...X..X.X..XX..X.", ".....X.XX.X.......XX.X.X..X.X.X..X..XX...XX.XXX..", ".XX.X......X.X.X.X.......X.....X.XX..X.X.XX...X.X", ".X..X.X.X.X..X.X..XX.X.XX.X.X.X....X.X.X....XX...", "XX.XX..X..X.X.X..X...XXX..X..X..X.X..XX..X.X..X.X", ".....X..XX.....X.X.X.....X..X.X.X.XX...X..X..X...", ".X.X..X..XX.XXXXX...X.X.XXX.X.X..X..X.X.X.XX.XX.X", ".X..X.X.X..X...X.X.X...X.X.....X...X....X......X.", ".X.X.X..XX..X.X.....X.X....X.XX..X..XX.X.X.X.X...", "..XX...X...X...XXX.X..X.X.X...XX.X.X.XX....X.X.X.", "X..XX.XX.X...X....X.X..X...X.X...X.....X.X.XX.X..", "XXXXMX..XXX.X.X.X...X.XXX.X...X.XX.XX.XX.X....XX.", "XXX....X.XXX...X..X....X...X.XXX.....X..X..XX...X", "XXXXXX....X.XX.X.XXX.XX..X.XX.XXX.X.X..XX.X...X.X", "XXXXXXXX.X........X....XX......X..X...X....X.XX..", "XXXXXX.....X.X.X.X..X.XXXX.X.X..X..X.XXX.X..X...X"}));
    ExampleRunner.eq(90, 20, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXXXXXXX.X...X.XXXXXXXXX....X..X.X.XXXXXXXXXX", "XXXXXXXXX.X.X.XXX.X..XX.XXXXXXXX...X..X.....XXXXXX", "XXXXXXXXX......X..X.X....XXX...X.XX.X.X.XX.XXXXXXX", "XXXXXXXX..XXX.X.X.X...X.X...XX....X......XXXXXXXXX", "XXXXXXXXX.X.X...X..X.X.X..XX..X.XX.X.X.X..XXX.XXXX", "XXXXXXXX.X...XX.X.X.....X...X....X.X.XX.X.XX..X.XX", "XXXXXXXX.XXX.X....X.X.XX..XX..XX.X.X..X..X..X.X..X", "XXXXXXX........X.X..X.X..X...XX.X...X..X...X....XX", "XXXXXX..XXX.XXX...X..X.X.X.X.X..X.XX..X..XX..XX.XX", "XXXXXXX.X.XX...X.X..X..X..X....X..X..X.X....XX..XX", "XXXXXXXX.....X...XX..X.X.X..XXXXX..X.....XX...X.X.", "XXXXXXXXX.X.X.XX....X..X...X...X..XX.X.X...XXX.XX.", "XXXXXXXX.X.X...X.X.X..XXXX.X.X..X.....X.XX...X....", "XXXXXXX......X..X..XX..X....XXX.X.X.X.....X.XXXX.X", "XXXXX..X.X.XX..X.X...X..X.X.XXX.X..X.X.X.X.X..X...", "XXXXXX..X.X..X...X.XX.X..X...X....X..XX.X....X.X.X", "XXXXX.X.X...X.XX.......X.X.X...XX..X..X..XX.X..X..", "XX....X.XX.X...X.XX.XX.X.X..X.X.X.X.X...X.....X..X", "XXX.X........X..X.X...X...X.X....X....X...XX.X.X.X", "XXX.XX.X.X.X..X...*.XX.X.X.X..X.X.X.X..X.X........", "XXXXXXX..X.X.XXXX.X........X.X.XX....X..X.X.XX.X.X", "XXXXXX.X.X..X.X....X.XXXXX........XX..XX..X..X.X..", "XX......X.XX....X.X.X......XXX.XX.X.XX...X.XX.XX.X", "X..XXX.X.....XX.X.X..X.XX.XX..XX.X....X.X..X...X.X", "XXX......XX.X....X.X..XX.....XX....XX...X.X..X..X.", "XX..XX.X...XXX.XX..X.X..XX.X....X.X..XX....X..X.X.", "XXX.XXX.X.X.X.XX.X.....X...X.X.X.X..X.XX.X...X.X..", "XXXXXX...X..X......X.X...X..X.X..X.X....X..X....X.", "XX.XX.XX..X..XX.XX.X.X.X.XX.X..X.....X.X.XXXXXXX..", "...X...XX..X.X..X.X..X..X.....XX.XX.X.X....X.....X", "XX...X....X....X...X.X.X..X.X.....X.....XX...X.X..", "XXX.XXX.X...X.XX.X...X..X.X..X.X.X..X.X.X.XXX.XXX.", "XX..XX...X.X.X...X.X.X.X..X.X.X..XX..X.........XX.", "XXX.XXX.X.X....XX...X...XX....XX..X.X.X.XX.XX.X..X", "XX.XXX.XX...XX.X..X..X.X...X.X..XX.....X...XX.X.XX", "X...XX.X.XX.X...X..X.X..X.X....X..X.X.XXX.X.......", "XXX.......XX..X.X.X.X..XXX..X.XXX.X.X..X.X..XX.X.X", "XXXX.XX.X....XXX..X..XXXXX.X...X..XX.X....XX...X.X", "XXXXXXXX.XXX.XXXX..X...XX.X.X.X.X..X.XX.X..X.X.X..", "XXXXXXXX......XX..XXXX....X.......XX...X..XX.XXXXX", "XXXXXX...X.XX...X..X...XX.XXXX.XX....X..X.X..XXXXX", "XXXXXX.X..X...X.X.X..X.X......M..X.X..XXXXXX.XXXXX", "XXXXXXXXXXXX.X..X..XX..X.X.X.X.X..XX.X.XXXXXXXXXXX", "XXXXXXXX.XXX.XX..XXXXXX.XX.X.X.XX.X.....XXXXXXXXXX", "XXXXXXX........XX...X.X....X.X...X.X.XXX...XXXXXXX", "XXXXXX..XX.X.X..XXX.....XX.X..XXX..X..XX.XXXXXXXXX", "XXXXXXX.XXXXXXXXXXXX.XX.X...X.....X.XX....XXXXXXXX", "XXXXXXXXXXXXXXXXXXXXX...XXXXXX.X.X...X.XXXXXXXXXXX", "XXXXXXXXXXXXXXXXXXX...X.....X..X...X.......XXXXXXX"}));
    ExampleRunner.eq(91, 22, new MazeWanderingEasy().decisions(new String[]{"XXXXX.XXXXXXX.X..X..X....X..X.XXX..XXX.XXXXXXXXXX", "XXXXX.XX.X.X....X.X..X.X.XX....X..XXXX.XXXXXXXXXX", "XXXXX.XX.X..XXX...XX....X.X.X.X.X.XXX..XXXXXXXXXX", "X.X.X.XX..X.X.X.X..X.XX.X.X..XX.X..X..X.X.XXXXXXX", "X.......X...X.X.X.X..X.X...X....X.X.X...X..XXXXXX", ".XXX.X.X.X.X..XX..X.X..X.X.X.X.X....X.X...XXXXXXX", ".X....X.....X.X.X.X...X...XX..X..XX.X..X.XXXXXXXX", ".XX.X..X.XX.X.X....X.X.X.X..X...XX...X.XXXXXXXXXX", ".X.X.X..X.....X.X.X..X....X.X.X...XXXX..XXXXXXXXX", ".X...X.X..XX.X.X....X..X.X..X..XXXXX.X.X..XXXXXXX", "...X....XX.X.X.X.X.XX.X.XX.X..X....X.....XXXXXXXX", ".XX..XX.........X..X.........X..X.X..X.X.XXXXXXXX", "...X..XX.X.XX.XX.X...X.X.X.X.XXX...XX..XX..XXXXXX", ".XX.XX.X.X.X.....X.X.XXX..X...X.X.X..X....XXXXXXX", "X...X...X.X.XX.XX.X.....XXMXX.X....X.X.X.XX.XXXXX", "..X.XX.X....XX....X.X.X.X....XX.X.X..X..XX...XXXX", "X.X....X.XX...X.X..X...XXX.X.X.XX.X.X..X...XX.XX.", ".X..XX...X.XX..X.X..XX..X...X..X.....X...X.......", "..X..XXXXX.X.X.....X.X.X..X.X.X..X.XX..XXXX.XX.X.", "X...X..........X.X...X.XX..X...X..X.X.X..X...XX.X", "XX.X..XX.X.XX.X.X..X.X....X..X..X......X..X.X....", "X..XX...X..XXX....X..XXXX.X.X.XX..XX.XXX.X.X..X.X", "XX.X..XXXX..X.X.X..X.............X.XXX.......XX.X", "XX.XXXX.X..X...X..XX.X.XX.XX.X.X.......X.X.X...XX", "XXX...X.XXX.X.XX.X..X....X.X..X..X.X.X..XX.X.X.XX", "XXX.X...........X.X.X.XXXX...XX.X..XX..X..X..X.XX", "XXXXXX.X.XX.X.X.X.........X.XX..XX...X...X.XXXXXX", "XXXXXXXXX....X....X.X.X.XX..X.XX.X.XXXXXXX...XXXX", "XXXXXXXXX.XX..X.X..X...X.XX.......X........XXXXXX", "XXXXXXXX.XX.XX..XXXX.X....X.X.X.X..XX.X.XX.XXXXXX", "XXXXXXX.......XX.....X.XX.X.XX..XX.....XXXX.XXXXX", "XXXXXX..X.XXX....X.X.X..X.X...X..X.X.X..XXX..XXXX", "XXXX...XXX...X.XX.XX.X.XXX..X.X.X...X.XX.X.X.XXXX", "XXXXXX.XXXXX...X.....X..X.X.X..X..X...........XXX", "XXXXXXXXXX..X.XXX.XX..XXX....X.XX.X.XXX.X.X.XX...", "XXXXXXXXXXX...X...X.X.X...X.X...X.X.X....X.....XX", "XXXXXXXXXXX.X..XXX.....X.X...XXX.X..XX*X..XX.X..X", "XXXXXXXXXXXX..X....X.X.X..X.X....X.X....XX.X..X.X", "XXXXXXXXXXX..XXXXX.X.X.X.X....XX.XXXX.XXXX...XX.X", "XXXXXXXXXXXX.X.....X..X.X..X.XX.X.XXX.XXXXXX..XXX", "XXXXXXXXXXXXXXXX.X..X.X...X........X....XXXXXXXXX", "XXXXXXXXXXXXXX...X.XXX..X.XX.X.XX.XXX.XXXXXXXXXXX", "XXXXXXXXXXXXXXXX.X.XX..X...X.XX.XXXX..XXXXXXXXXXX", "XXXXXXXXXXXXXXXXXX.XXX.XX.X.......XXXXXXXXXXXXXXX"}));
    ExampleRunner.eq(92, 29, new MazeWanderingEasy().decisions(new String[]{"XXXXX.X.XX...X....XXX.X.XX.........X.X........XX.", "XX.XX......X..XX.X.X.......XXX.XX.X...X.X.X.X..X.", "....XXX.XX.X.X.X.X..XXXX.X...XXX.X..XX...X.X.XX..", ".XX..X.X.XX..X.X..X.X..X.X.XX....XX.X..X...X.XXX.", "XXXX.......X.X...X..X.XXX...XX.X....XX.XXXX...X..", "XXX.XX.X.X.....X.XX.X..X..XX..X..XX.......X.X..X.", "XX....XXX.XXX.X.X....X..X..X.X.X...XX.XX.XX..XXX.", "X.X.XX.X......X.X.X.X..X.X.......XXX.X..XX..XX...", ".....X..XX.XX....X..XX.X...X.XX.XX....X.X.X...X.X", ".XX.X.X.XXX..X.XX..X....X.X..XXX..X.X...X.X.XX...", "X........XX.X....X..XX.XXX.X..X..X...X.X.......X.", "..X.X.XX......X.X..X.X..X..X.X..X.X.X....XX.X.X..", ".XXX.X..X.X.X.XX.X.....XXX.....X...X..X.X...XXXX.", "X.X...X.XX.X.......XX.X.X.X.XXX.XX...X...XX...X..", "X...X.......X.XXX.X..X......X......X.XX.X..X.X.XX", "..X.X.XX.XX.XX......X.X.X.X..XX.X.X.X.X..X...M.X.", ".X.X.X..X......XX.X....XXX.X.....X.....X..X.X.X..", ".X.....X..XX.XX....XXX..X...X.XX.X.X.XX.X..X.X..X", "X.XXX.X.XX..X..XX.X....XXX.X...XX...XXX.X.X...X..", "....X.X....X..X..X.X.X..X..XX.X.X.XX.X...XXX.XX.X", ".X.X....XX...XX.XX....X..X.........X...XX.X..X...", ".XX..X.XX.XX......XX.XXX.X.X.XX.XXX..X..X..X...X.", "....X.X......XXX.X.X..X.....XX.....X.XXX..X.X.XX.", "X.X.X.XXX.XXXX.X....XX..X.X...X.X.X....X.X....X..", "XX.X.....X.......XX....XXX..X..X....X.XX...X.X.X.", "XX...XX.XXX.XXXX...XX.X.X.X.X.XX.X.X.X...X.XX...X", "X..X...XXX.XX...X.X.....X.X.X...X......X..X.XX.X.", "..X..X..X.....XX.X..X.X.X....XXXXX.X.X..X........", "X.XXX..X.XX.X.X...X.X.X.XX.X....X..X.X.X..X.X.X.X", ".....X....X.X..X.X...X...X.X.X.X..X...X.XX.XX..XX", ".X.XX.XX.X.X.X.....X..XXX...X...XX..X........XX.X", "X.XX...........XX.X.X.X...X..XX.X..X..X.X.XX.....", "..X.X.XX.X.X.X..X....X.XX..XX....X.XX..X...X.XX.X", ".X...X.X..XX..XX..XX.....X...XX.XXX...X.XX.X..XX.", "...X.....XX..X..X..*X.X.XX.XX.XX.X.X.X..X.XXXX...", "XX..XXXX...XX.X...X..XX.X......X......X.X.XX.X.X.", "...X.....X.X....X..X...X..XX.X.XX.X.X...........X", ".X.X.XX.XX.X.X.X.X.X.X..X.X...X...X.X.X.X.X.X.XX.", "..X.X.X.X.XX.X...XX...X.X..XX.X.XXX..X..XX..X....", ".X......X.X..X.X...X.X...X..XXXX....XX.X..X..X.X.", "X..XX.X....XX...XX..X..X.X.X..X.X.X.X....X..X..X.", ".X...X..X.X...X...X..X.X.X.XX.X....XXX.XX..X.X..X", "...X..X.X.XXX..X.XX.X.X.X.X.....X.XXX...XXXX..X..", "X.X..X...X....X..X.........X.XX.X..X..X.....X...X"}));
    ExampleRunner.eq(93, 27, new MazeWanderingEasy().decisions(new String[]{"X..X.X.X...X...X..X....X..X..XX..XXX", "..XM.X..XX..X.X..X.XX.X..X.X....X.XX", ".X..XXX.X..X...X.X..X...XX..XX.XX..X", "..X.XX....X..XX..X.X.X.X..X......X..", ".X.....XX...X..X...X.X..X.X.X.XX.XX.", "..XX.XX...X.X.X.X.X....X..X..XXXX...", ".X..X..XX.X...X.X.X.XX...X..X.XXXX.X", "..X..X.XXX.X.X..X..X...XX.X....XXX..", "X..X....XX.X..X.X.X..X......X.X.X..X", ".X..X.X.....X.X.X..XX..XX.XX.X...X..", "..X..XX.X.XX......X..X...X....XX.X.X", "X...X..XX...XX.XX.X.XXX.X..X.XXX.X..", "..X...X..XX.X.X.X....X..X.X.X.X....X", ".XXXX..X.X....X...XXX.X.X.*.X..X.X..", "X.X..X.X..X.X...X.X.....X.XXX.X..XX.", "X...X....XXX.XX.X.X.XXX.X.X.....X..X", ".X.X.X.X..X..XXX.......X...X.X.XX.XX", ".X....XX.X.X..X.XX.XX.X.X.X.X......X", "...XX......X.X.......X..X.....XX.X..", ".X..XX.X.X.....X.X.XX.X...X.X...X.XX", "X..X.X..X..XX.XXX......X.X.X.XX.....", "..X....X.X.X...XX.X.XX.........X.XX.", ".X.XX.X.....X.X..XX..X.XX.XX.XX.X.XX", "XX.XX.XX.X.X..XX....X...X..X........", "........X..X.X...XX..X.X..X..X.X.X.X", ".X.X.XXX.X..X..XX.X.X...X..X..X...X.", "..X..X.....X..X.X...X.X..X.XX.X.X...", "X.X.X.X.X.XX.X....X.X..X.X..X..XX.XX", ".X.X.....X..X..XX.X..X.X..XXX.X.....", "....X.X.X.X.X.X...XX..X.X....X.X.X.X", "X.XX.X..X...XX.XXX...XX..X.X.X...X..", "X.X...X.X.X.......XX....X.X...XX..X.", "....X....XXX.XXXX....X.X..X.X.X..X..", "X.X..X.X.XX.X.....XX.X..X..X.X..XXX.", "..X.X..XX.....XXX.X...XX..X...X..X..", ".X.X.X..X.X.XX....XXX....X..X.X.X..X", "X......X...X...XX...X.X.X..X.....X.."}));
    ExampleRunner.eq(94, 23, new MazeWanderingEasy().decisions(new String[]{".X.....X.X..X..X.X...XXX", "..X.X.X....X..X...XX..XX", "X....X..XXX..X.X.X...X.X", "X.X.X.X.X...X....X.X.X..", "..X.......XX..XXX.X....X", ".XX.XX.XXX..X.X....X.X..", ".X.X.....X.X..XX.XX...XX", "X....X.X.X.X.X.....X.X..", "..XX.X.X.X...*.XX.X....X", "X.X...X..X.XX.X...X.XX..", ".X.X.X.X.X...X.X.X....X.", ".X..X......XX...XXX.X..X", "..X..XX.XX....XXXXX..X..", "X.X.X..X...X.X..XX..X.XX", "X.X...X..X.X...X..X.....", "...XX...X...X.X.X.XX.XX.", "X.X.XX.X..X..X.....X.X.X", ".......XX..X..X.X.X.....", "X.X.X.X...X..X.X....XXXX", "..X.XX.X.X.X.....XX.....", "X..X....X....X.X...X.X.X", ".XX.X.X...XX.X..X.X..X..", ".....X.XX.X...X.X..X.X.X", "XX.X...X.X.X.X.XX.X.X.X.", "..XXXX...........X..X.X.", "X.XX.XXXX.X.X.XXX..X....", "..........X.X...X.X.X.XX", ".X.X.XX.X.X.X.X.........", ".XX..X.X..X.X.X.X.XX.X.X", "...X.X...X..X..X..X.XX..", "XX.X..XX.X.X..X.X...X..X", ".XX..XX..X..X.X..XX..X..", "....X...X.X.X...XX.XX..X", "XMX.X.X...XX..X.....X.X.", ".X...X..X..XX..X.XX..XX.", ".X.X.XX.X.X..X..X..X....", "...X...XX..X.XX..X..X.XX", "X.XXX.X..XX.....X.X.X...", "...X...X....X.X.....X.X."}));
    ExampleRunner.eq(95, 14, new MazeWanderingEasy().decisions(new String[]{"XXXX.XXXXXXXXXXXXXXXXXXXX", "XX.X.XXXXXXXXXXXXXXXXXXXX", "XX....X.X.XXXXXXXXXXXXXXX", "XXX.X.....X.XXXXXXXXXXXXX", "XXXX.X.XXX..XXXXXXXXXXXXX", "X.......X.X.XXXXXXXXXXXXX", "XX.XXX.X.....XXXXXXXXXXXX", "XXX..M...X.XXXXXXXXXXXXXX", "XX..X.XX..X..XXXXXXXXXXXX", "XXX.X.X..X..XXXXXXXXXXXXX", "XX..X..X...X.XXXXXXXXXXXX", "XXX..XXX.X.....XXXX.X.XXX", "XXXXXXXXXX.X.XXX.XX.X..XX", "XXXXXXXXXX.XXXXX....X.XXX", "XXXXXXXXX...XX..XXX....XX", "XXXXXXXXXX.XX.X..X..XXXXX", "XXXXXXXXX.......XXX..XXXX", "XXXXXXXXXXXXXX.X..X.XXXXX", "XXXXXXXXXX.X.X.X.X...XXXX", "XXXXXXXX...........XXXXXX", "XXXXXXXX.XX.X.X.XX....XXX", "XXXXXXXXXX..X.X.XXX.X.XXX", "XXXXXXXXXXX.X.X..X...XXXX", "XXXXXXXXXXXXX.*XX..X.XXXX", "XXXXXXXXXXXXXX..XX..XXXXX"}));
    ExampleRunner.eq(96, 16, new MazeWanderingEasy().decisions(new String[]{".X.X....XX....X...X.X.X.X", ".X...X.X...X.X..XX..X....", ".XXX..XXX.X.X.X.X..X..X.X", ".....X.X..........XMX.X.X", ".X.X.....X.X.XX.X......XX", "X.X..X.X.X..X.X.X.XX.X...", "....X...X..XX....X...X.X.", "X.X..X.X*XX..XX.X.XX..X..", "XX..X..X...X..X...X.XXXX.", "X..X.X...X...X..X...X..X.", "..X....X.X.X..X..XX...XXX", "X.X.X.X...X.X.X.XXX.XXXXX", "XX.X...X.X..X.X.XX....XXX", "X...X.X....XX..X...X.XXXX", "XXX....X.X...X..XX..XXXXX", "XX..X.X..X.X..X...XXXXXXX", "X..X..XX.X..X.X.X..XXXXXX", "XX..X...X..X.X..XXXXXXXXX", "X..X..XXXX....X....XXXXXX", "XX.X.XX.X..XX.XXX.XXXXXXX", "XXXXXX....X...XXXXXXXXXXX", "XXXXX..X.XXXX.XXXXXXXXXXX"}));
    ExampleRunner.eq(97, 31, new MazeWanderingEasy().decisions(new String[]{"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", "X................XXXXXXXXXXXXXXXXXXXXXXXX", "X.XXXXXX.X.X.X.X...........XXXXXXXXXXXXXX", "X......XXXXX.X..X.X.XX.X.X..XXXXXXXXXXXXX", "X.X.XX......XXXXXXXXXX..XXX...XXXXXXXXXXX", "X.X...X.X.X.........XXXXXXX.X.........XXX", "X.X.XXX.X..X.X.XX.X........XXXXX.X.X.XXXX", "X.X....XXX..XX.XXXXXXXXX.X......XXXXXXXXX", "X.X.XX....XXXX..........XXX.X.X..........", "X.X.XX.XX....X.X.X.XXXX....XX..XX.XX.X.X.", "X.X..X..X.X.XX.X.X.....XXX..XXXXXXXXXXXXX", "X..X.X.XX..XXX.X.X.X.X....X..............", "X.XX..XXX.XXXX.X.X..XX.XXXXXXXXXXXXXXXXX.", "X.XX.XXXX.XXXX.X.X.XXX..................X", "X..X.XXXX...XX.X.X.XXX.XX.X.X.X.XX.XX.X..", "XX.X....X.X...XX.X..XX...XXXX..XXX.XX..XX", "XX.XX.X.X.XXXXXX..X..X.X....X.XXXX...X...", "XX..X.X.X......XX.X.XX.X.XXXX.....XX.XXXX", "XX.XX..XX.X.XX...XXXXX.X.....XX.X..X.....", "XX..X.XXX.X.XX.X.....XXXX.X.XXXXX.XXX.X.X", "XX.XX.XXX.X...XX.XXX.....XX...M..XXXX.X..", "XX..X...X.XX.XXX....XXXXXXXX.XXX....XXX.X", "XX.XX.X.X..X.XXX.XX.......XX....XXX...X..", "XX.XX.XXXXXX....XXX.X.X.X...X.X....XXXXX.", "XX..X......X.X.XXXX..XX.X.XXXXXXXX.....X.", "XX.XXX.X.XXX..XXXXX.XXX.X.........XX.X..X", "XX.XXX.X...X.XXXXXX....XXX.X.XXXXXXXXXXXX", "XX...X.X.X.X.XXXXXXX.X...X.X.............", "XX.X.X.X..XX..XXXXXX..XX.X.X.X.XX.X.X.XX.", "XX..XX.X.XXXX......X.XXX.X..XX..X.XXX..X.", "XX.XXX..XXXXX.X*XX.X.XXX..X..XXXX...X.XX.", "XX....X.....X.X...XX....X.XX.....X.XX...X", "XX.XXXXX.XXXX.X.X...X.X.X..X.XXX..XXX.X..", "XX.XXXXX....X.X.XXX..XX..X.X...X.XXXX.X.X", "XX.XXXXXX.X.X.X....X...X.X.X.X.X....X.X..", "XXXXXXXXX..XX..X.X.X.X.X.X.X..XX.X.XXXXX.", "XXXXXXXXX.XXXX.X..XX..XX.X..X..X.X.....X.", "XXXXXXXXX....X.X.XXX.XXXXXX.X.XX..X.X.XX.", "XXXXXXXXX.XXXX..XXXX......X.X..XXXX..XXX.", "XXXXXXXXX....X.XXXXXX.XXX..XXX.....X.XXXX", "XXXXXXXXXX.X.X......X....XXXXX.X.X.X.....", "XXXXXXXXXX..XXX.X.X.X.XX.....X.X.XXX.XXX.", "XXXXXXXXXX.XXXX.X.X.X...XX.X.X.X...X....X", "XXXXXXXXXX....X..XX..X.XXX.X..XX.X..X.X.."}));
    ExampleRunner.eq(98, 30, new MazeWanderingEasy().decisions(new String[]{"..X.X..X.XX..X.XXX.X..XX..X....XXXXXXXXXX", "X....X...X.X.X.XX...X*X.X.XXXX.XXXXXXXXXX", ".XXX.XXX.X.X.....XX.X.X.X.XXX..XXXXXXXXXX", ".....X.X.X.XXXXX....X......X.X.XXXXXXXXXX", "XXXX.X.....XXX..XXX.XXXXXX.X....XXXX.XXXX", ".XXX..XXXX..X.X......XXXX..XXXX.XX.X.XXXX", ".XX.X.X..XX.X.XXXXXX.XXX.X.X....XM...XXXX", ".X.....X.X..X..X.XX..XX..X.XXXX.XXXX.X.XX", ".XXXXX.X.XX..X.X.X.X.X.X.X..XX..XX.....XX", "..X.X....X.X.X.X.X...X....X.X.X.XXXXXX.XX", "X.X.XXXX.X...X.X..XX..XXX.X.X....XXXX..XX", "..X.XXX..XXX.X..X.X.X...X.X.XXXX.XXX.X.XX", "X...XX.X.....XX.X....XX...X.X.....X....XX", ".XX.X...XXXX..X..XXX.X.XX.X.XXXXX..XXX.XX", ".X..XXX.X..XX..X.XXX.X......XXXX.X.XX..XX", ".XX.X.X.XX.X.X.X.XX..XXXXXX..XX..X.X.X.XX", ".............X.X...X.XXXXXXX.X.X.X.X...XX", "XXXXXXXXXXXX.X.XXX....XXXXXX.X...X.XXX.XX", "X..X.XX.........X.XXX.XXXXX..XXX.X.XXX.XX", ".X.....XXXXXXXX.X.XX..XXXX.X.X......X..XX", ".XXXXX....X.X...X.X.X.XXX....XXXXXX.XX.XX", "..X...XXX....XX.......XX.XXX.X..X.X.XX.XX", "X.XXX....XXX.XXXXXXXX....XXX.XX.X...X..XX", "..X.XXXX......XX.....XXX.XX...X.XXX.XX.XX", "X.X.XXX.XXXXX.X.XXXX.....X.XX.X.XXX.X..XX", ".....X..X.XX.....X.XXXXX...XX.X.XX..XX.XX", "XXXX.XX.....XXXX.X.XX.X.XX......X.X.X..XX", "...X...XXXX.X....X.X..X..XXXXXX.X.X.XX.XX", "XX..XX.XXX..XXXX...XX..X.XX...X.X....X.XX", "..X.XX.XX.X.X.X.XX.XXX.X.X.XX...XXXX.X..X", "X..................XXX.X.X.XXXX.XXXX.XX.X", ".XXXXXXXXXXXXXXXXX.XX..X.X.XXXX.XXX..XX.X", "..............X....X.X.X.X.XXX..XX.X.X..X", "XXXXXXXXXXXXX..XXX.....X.X.XX.X.X..X..X.X", ".X.X.XX.XX..XX....XXXX.X.X.X....XX.XX.X.X", "..........X.X.XXX..........XXXX....XX.X.X", "XXXXXXXXX......X.XXXXXXXXX.XX..XXX....X.X", ".X.X.X.X.XXXXX........X.XX.X.X..X.XXX.X.X", "............X.XXXXXXX.........X.X.X...X.X", "XXXXXXXXXXX...XXX..XXXXXXXXXX......XX.X.X", "XXXXXXXXXXXXX..X.X.XX.X.X..X.XXXXX......X", "XXXXXXXXXXXXXX...........X.X.X.X.XXXXXX.X", "XXXXXXXXXXXXXXXXXXXXXXXX................X", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"}));
    ExampleRunner.eq(99, 24, new MazeWanderingEasy().decisions(new String[]{".X....X...XX.X.....XX.X.X.X.XX.X..X.X..X.XXXXX", ".XXXX.XXX.X...XXXX....X...X.X..XX...XX.X..XXXX", ".XX....X..XXX.X.X.XXX.XXX.X..X...XX.XX.XX.XXXX", ".X.XXX.XX.X...........X.X.XX.XXX.X..X.....XXXX", ".X.XX..X..XXXXXXXXXXX............XX.XXXXX.XXXX", ".X.X.X.XX.XX.XX..X.X.XXXXXXXXXXX.....XXX..XXXX", ".....X.X..X..X.X.X......X.X..X..XXXX..X.X..XXX", "XXXX.X..X.XX.X.X..XXXXX.X.XX..X...XXX.X..X.XXX", "XX.X.XX...XX.X.XX.X.XX..X.X.X..XX.XXX..X...XXX", "X......XX.X..X.X..X.X.X*X....X.X...X.X..XX.XXX", ".XXXXX.X...X.X..X.X.....XXXX....XX....X.X..XXX", "........XX.X..X.X.XXXXX.X.X.XXX.XXXXX...XX.XXX", "XXXXXXX..X.XX.X...XXX.....X..X..XXX..XX.X..XXX", "..X..X.X...X...XX.XX.XXXX.XX..X.XX.X.X..XX.XXX", "X.XX...XXX..XX.X..X...X...X.X...X..X.XX.XX.XXX", "..X.XX.XX.X.XX.XX.XXX.XXX...XXX..X.X.X.....XXX", "X..............XX.XXX....XX.X.XX.X.X.XXXXX.XXX", ".XXXXXXXXXXXXX.....X.XXX....X.X..X...XXXXX..XX", ".XX.X.......XXXXXX.X.X.XXXX.X..X..XX.XXXX.X.XX", ".X..XXXXXXX.XX.XX..X.X.XX....X..X.X..XXX.....X", "..X.XX.XX......X.X.X.M.X.XXX..X.X.XX..X.XXXX.X", "X......X.XXXXX......XX.X.X.XX.....X.X.X..X...X", ".XXXXX.X.X.X.XXXXXX.X..X.X.XXXXXX......X..XX.X", ".............X.XX.X.XX.X....X.XX.XXXXX.XX....X", "XXXXXXXXXXXX...........XXXX.X.X..XXXX..X.XXX.X", ".X.......XX.XXXXXXXXXX.XX.X.X.XX.XXX.X.X.X.X.X", ".XXXXXXX.......XX.............X..XX....X.....X", ".X...X.XXXXXXX...XXXXXXXXXXXX..X.X.XXX.XXXXX.X", "..XX.X.X.X.X.XXX.......XX.X.XX..........XXX..X", "X.X..........XX.XXXXXX.X....XXXXXXXXXXX.XX.X.X", "..XXXXXXXXXX............XXX.XXX..X..XXX.X..X.X", "X..XX.XX....XXXXXXXXXXX.....XX.X.XX.XX..XX.X.X", ".X....X.XXX.X.XXXXXX.X.XXXX.X....X..X.X.X....X", ".XXXX.X.XXX.X.XXXXX..X.X.....XXX.XX......XXX.X", "........XX.....XXX.X.X..XXXX.XX..X.XXXXX..X..X", "XXXXXXX.X.XXXX.XX.....X.XX.X.X.X.X....X.X..X.X", ".X.............X.XXXX............XXXX.X.XX...X", "..XXXXXXXXXXXX.....X.XXXXXXXXXXX..XXX...X.XX.X", "X..X.X..X.....XXXX....XX..X.X..XX.XX.XX.X.X..X", "XX....X.XXXXX.X.X.XXX.X.X.X.XX..........X.XX.X", "XXXXX.....................X.X.XXXXXXXXX......X", "XXXXXXXXXXXXXXXXXXXXXXXXX..............XXXXX.X", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX.......X", "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"}));
    ExampleRunner.eq(100, 0, new MazeWanderingEasy().decisions(new String[]{"*M"}));
    ExampleRunner.eq(101, 0, new MazeWanderingEasy().decisions(new String[]{"..........*", ".XXXXXXXXXX", "...........", "XXXXXXXXXX.", "M.........."}));
    ExampleRunner.eq(102, 3, new MazeWanderingEasy().decisions(new String[]{".X.X......X", ".X*.X.XXX.X", ".XX.X.XM...", "......XXXX."}));
    ExampleRunner.eq(103, 2, new MazeWanderingEasy().decisions(new String[]{"...", "XMX", "..*"}));
    ExampleRunner.eq(104, 1, new MazeWanderingEasy().decisions(new String[]{"*.M", ".X."}));
    ExampleRunner.eq(105, 1, new MazeWanderingEasy().decisions(new String[]{"X.XX.", "X.XX.", "X....", "XX.XX", "XXMXX", "XX.XX", "XX.XX", "XX*XX"}));
    ExampleRunner.eq(106, 1, new MazeWanderingEasy().decisions(new String[]{}));
    ExampleRunner.eq(107, 4, new MazeWanderingEasy().decisions(new String[]{"XXXX*XXXXXXXXXX......M", "XXXX.XXXXXXXXXXX.XXXXX", "XXXX.XXXXXXXXXXX..XXXX", "XXXX.XXXXXXXXXXX.XXXXX", "XXXX...........X..XXXX", "XXXXXXXXXXXXXX.X.XXXXX", "XXXXXXXXXXXXXX....XXXX", "XXXXXXXXXXXXXXXXX.XXXX"}));
    ExampleRunner.eq(108, 1, new MazeWanderingEasy().decisions(new String[]{"M..*", "XX.X"}));
    ExampleRunner.eq(109, 1, new MazeWanderingEasy().decisions(new String[]{".*.M."}));
    ExampleRunner.eq(110, 2, new MazeWanderingEasy().decisions(new String[]{"MX....", ".XX.XX", "......", "XXX.XX", "X....*"}));
    ExampleRunner.eq(111, 1, new MazeWanderingEasy().decisions(new String[]{"X.X", "*.M", "X.X"}));
    ExampleRunner.eq(112, 1, new MazeWanderingEasy().decisions(new String[]{".............M............*"}));
    ExampleRunner.eq(113, 1, new MazeWanderingEasy().decisions(new String[]{"X*X", "..M"}));
    ExampleRunner.eq(114, 1, new MazeWanderingEasy().decisions(new String[]{"XX.M.*"}));
    ExampleRunner.eq(115, 1, new MazeWanderingEasy().decisions(new String[]{"XXX.", "M...", "XXX.", "X...", "X.XX", "X...", "XXX.", "XXX*"}));
    ExampleRunner.eq(116, 1, new MazeWanderingEasy().decisions(new String[]{"*...M", "XX.XX", ".....", "XX.XX"}));
    ExampleRunner.eq(117, 1, new MazeWanderingEasy().decisions(new String[]{".X", "M*", ".X"}));
    ExampleRunner.eq(118, 0, new MazeWanderingEasy().decisions(new String[]{".*.", "X.X", "XMX"}));
    ExampleRunner.eq(119, 1, new MazeWanderingEasy().decisions(new String[]{"M*", ".X"}));
  }
}
